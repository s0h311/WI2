2023-05-26 10:49:40,882 DEBUG [mondrian.server.monitor] ConnectionEndEvent(29)
2023-05-26 10:49:40,882 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:49:40,882 DEBUG [mondrian.server.monitor] ConnectionEndEvent(27)
2023-05-26 10:49:40,882 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:49:40,882 DEBUG [mondrian.server.monitor] ConnectionEndEvent(25)
2023-05-26 10:49:40,883 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:49:40,883 DEBUG [mondrian.server.monitor] ConnectionEndEvent(41)
2023-05-26 10:49:40,883 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:49:40,883 DEBUG [mondrian.server.monitor] ConnectionEndEvent(39)
2023-05-26 10:49:41,115 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {EXTRACT(day FROM FT_TIME_ID)=(*)}
    {WSA994_CUSTOMER.CUSTOMER_ID=(*)}
    {WSA994_PRODUCT.CATEGORY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {WSA994_PRODUCT.PRODUCT_ID=('BOTL1000','CAGE1000','DXRD1000','DXRD2000','ELBK1000','EPAD1000','FAID1000','KPAD1000','OHMT1000','ORHT1000','ORHT2000','ORMN1000','ORWN1000','PRRD1000','PUMP1000','RHMT1000','RKIT1000','SHRT1000')}
    {extract (month from FT_TIME_ID)=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[b5f6ceb3058e7d953fa2583be2c421343f51c842ed508a5d3be3d471a3051477]

2023-05-26 10:49:41,115 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 2
2023-05-26 10:49:41,116 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 440
2023-05-26 10:49:41,116 DEBUG [mondrian.rolap.agg.AggregationManager] NO MATCH : WSA994_FACTTABLE
Foreign columns bit key=0x0000000000000000000000000000000000000000000000000111100000101010
Measure bit key=        0x0000000000000000000000000000000000000000001000000000000000000000
Agg Stars=[

]
2023-05-26 10:49:41,116 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."CATEGORY_ID" as "c1",
    "WSA994_PRODUCT"."PRODUCT_ID" as "c2",
    "WSA994_CUSTOMER"."CUSTOMER_ID" as "c3",
    extract (year from FT_TIME_ID) as "c4",
    extract (month from FT_TIME_ID) as "c5",
    EXTRACT(day FROM FT_TIME_ID) as "c6",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m0"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_PRODUCT"."PRODUCT_ID" in ('BOTL1000', 'CAGE1000', 'DXRD1000', 'DXRD2000', 'ELBK1000', 'EPAD1000', 'FAID1000', 'KPAD1000', 'OHMT1000', 'ORHT1000', 'ORHT2000', 'ORMN1000', 'ORWN1000', 'PRRD1000', 'PUMP1000', 'RHMT1000', 'RKIT1000', 'SHRT1000')
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."CATEGORY_ID",
    "WSA994_PRODUCT"."PRODUCT_ID",
    "WSA994_CUSTOMER"."CUSTOMER_ID",
    extract (year from FT_TIME_ID),
    extract (month from FT_TIME_ID),
    EXTRACT(day FROM FT_TIME_ID)
2023-05-26 10:49:41,116 DEBUG [mondrian.sql] 15: Segment.load: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."CATEGORY_ID" as "c1",
    "WSA994_PRODUCT"."PRODUCT_ID" as "c2",
    "WSA994_CUSTOMER"."CUSTOMER_ID" as "c3",
    extract (year from FT_TIME_ID) as "c4",
    extract (month from FT_TIME_ID) as "c5",
    EXTRACT(day FROM FT_TIME_ID) as "c6",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m0"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_PRODUCT"."PRODUCT_ID" in ('BOTL1000', 'CAGE1000', 'DXRD1000', 'DXRD2000', 'ELBK1000', 'EPAD1000', 'FAID1000', 'KPAD1000', 'OHMT1000', 'ORHT1000', 'ORHT2000', 'ORMN1000', 'ORWN1000', 'PRRD1000', 'PUMP1000', 'RHMT1000', 'RKIT1000', 'SHRT1000')
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."CATEGORY_ID",
    "WSA994_PRODUCT"."PRODUCT_ID",
    "WSA994_CUSTOMER"."CUSTOMER_ID",
    extract (year from FT_TIME_ID),
    extract (month from FT_TIME_ID),
    EXTRACT(day FROM FT_TIME_ID)]
2023-05-26 10:49:41,116 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(15)
2023-05-26 10:49:41,597 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(15)
2023-05-26 10:49:41,597 DEBUG [mondrian.sql] 15: , exec 481 ms
2023-05-26 10:49:41,597 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."CATEGORY_ID" as "c1",
    "WSA994_PRODUCT"."PRODUCT_ID" as "c2",
    "WSA994_CUSTOMER"."CUSTOMER_ID" as "c3",
    extract (year from FT_TIME_ID) as "c4",
    extract (month from FT_TIME_ID) as "c5",
    EXTRACT(day FROM FT_TIME_ID) as "c6",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m0"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_PRODUCT"."PRODUCT_ID" in ('BOTL1000', 'CAGE1000', 'DXRD1000', 'DXRD2000', 'ELBK1000', 'EPAD1000', 'FAID1000', 'KPAD1000', 'OHMT1000', 'ORHT1000', 'ORHT2000', 'ORMN1000', 'ORWN1000', 'PRRD1000', 'PUMP1000', 'RHMT1000', 'RKIT1000', 'SHRT1000')
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."CATEGORY_ID",
    "WSA994_PRODUCT"."PRODUCT_ID",
    "WSA994_CUSTOMER"."CUSTOMER_ID",
    extract (year from FT_TIME_ID),
    extract (month from FT_TIME_ID),
    EXTRACT(day FROM FT_TIME_ID)], exec 481 ms
2023-05-26 10:51:37,694 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl.remove:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {EXTRACT(day FROM FT_TIME_ID)=(*)}
    {WSA994_CUSTOMER.CUSTOMER_ID=(*)}
    {WSA994_PRODUCT.CATEGORY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {WSA994_PRODUCT.PRODUCT_ID=('BOTL1000','CAGE1000','DXRD1000','DXRD2000','ELBK1000','EPAD1000','FAID1000','KPAD1000','OHMT1000','ORHT1000','ORHT2000','ORMN1000','ORWN1000','PRRD1000','PUMP1000','RHMT1000','RKIT1000','SHRT1000')}
    {extract (month from FT_TIME_ID)=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[b5f6ceb3058e7d953fa2583be2c421343f51c842ed508a5d3be3d471a3051477]

2023-05-26 10:51:37,695 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=2
2023-05-26 10:51:37,695 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=690, phaseCount=4, cellCacheRequestCount=126547, cellCacheHitCount=19910, cellCacheMissCount=106637, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:51:37,695 DEBUG [mondrian.server.monitor] ExecutionEndEvent(690)
2023-05-26 10:51:37,695 DEBUG [mondrian.server.monitor] StatementInfo{statementId=51, executeStartCount=1, executeEndCount=1, phaseCount=4, cellCacheRequestCount=126547, cellCacheHitCount=19910, cellCacheMissCount=106637, cellCachePendingCount=0, sqlStatementStartCount=3, sqlStatementExecuteCount=3, sqlStatementEndCount=2, sqlStatementRowFetchCount=13272, sqlStatementExecuteNanos=1122132300, cellRequestCount=106636}
2023-05-26 10:51:37,695 DEBUG [mondrian.server.monitor] StatementEndEvent(51)
2023-05-26 10:51:38,578 DEBUG [mondrian.server.monitor] ExecutionEndEvent(690)
2023-05-26 10:51:40,500 DEBUG [mondrian.server.monitor] ExecutionEndEvent(690)
2023-05-26 10:51:40,500 DEBUG [mondrian.sql] 15: , exec+fetch 119384 ms, 32000 rows
2023-05-26 10:51:40,500 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."CATEGORY_ID" as "c1",
    "WSA994_PRODUCT"."PRODUCT_ID" as "c2",
    "WSA994_CUSTOMER"."CUSTOMER_ID" as "c3",
    extract (year from FT_TIME_ID) as "c4",
    extract (month from FT_TIME_ID) as "c5",
    EXTRACT(day FROM FT_TIME_ID) as "c6",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m0"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_PRODUCT"."PRODUCT_ID" in ('BOTL1000', 'CAGE1000', 'DXRD1000', 'DXRD2000', 'ELBK1000', 'EPAD1000', 'FAID1000', 'KPAD1000', 'OHMT1000', 'ORHT1000', 'ORHT2000', 'ORMN1000', 'ORWN1000', 'PRRD1000', 'PUMP1000', 'RHMT1000', 'RKIT1000', 'SHRT1000')
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."CATEGORY_ID",
    "WSA994_PRODUCT"."PRODUCT_ID",
    "WSA994_CUSTOMER"."CUSTOMER_ID",
    extract (year from FT_TIME_ID),
    extract (month from FT_TIME_ID),
    EXTRACT(day FROM FT_TIME_ID)], exec+fetch 119384 ms, 32000 rows, ex=16, close=16, open=[]
2023-05-26 10:51:40,500 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=15, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."CATEGORY_ID" as "c1",
    "WSA994_PRODUCT"."PRODUCT_ID" as "c2",
    "WSA994_CUSTOMER"."CUSTOMER_ID" as "c3",
    extract (year from FT_TIME_ID) as "c4",
    extract (month from FT_TIME_ID) as "c5",
    EXTRACT(day FROM FT_TIME_ID) as "c6",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m0"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_PRODUCT"."PRODUCT_ID" in ('BOTL1000', 'CAGE1000', 'DXRD1000', 'DXRD2000', 'ELBK1000', 'EPAD1000', 'FAID1000', 'KPAD1000', 'OHMT1000', 'ORHT1000', 'ORHT2000', 'ORMN1000', 'ORWN1000', 'PRRD1000', 'PUMP1000', 'RHMT1000', 'RKIT1000', 'SHRT1000')
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."CATEGORY_ID",
    "WSA994_PRODUCT"."PRODUCT_ID",
    "WSA994_CUSTOMER"."CUSTOMER_ID",
    extract (year from FT_TIME_ID),
    extract (month from FT_TIME_ID),
    EXTRACT(day FROM FT_TIME_ID)}
2023-05-26 10:51:40,501 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(15)
2023-05-26 10:51:40,501 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadFailedEvent@4bf88436
2023-05-26 10:51:40,501 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 2 times for total of 144609ms.  (Avg. 72304ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Customer], [Time.TimeHierarchy].[Day]] invoked 1 times for total of 24871ms.  (Avg. 24871ms/invocation)

2023-05-26 10:51:40,501 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 652933kb 83.45%
2023-05-26 10:51:40,501 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:51:40,501 DEBUG [mondrian.mdx] 690: exec: 170693 ms
2023-05-26 10:51:41,165 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=2
2023-05-26 10:51:41,165 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=3
2023-05-26 10:51:41,165 DEBUG [mondrian.server.monitor] ConnectionStartEvent(49)
2023-05-26 10:51:41,165 DEBUG [mondrian.server.monitor] StatementStartEvent(56)
2023-05-26 10:51:41,165 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,165 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=3
2023-05-26 10:51:41,165 DEBUG [mondrian.server.monitor] StatementInfo{statementId=56, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,165 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=3
2023-05-26 10:51:41,165 DEBUG [mondrian.server.monitor] StatementEndEvent(56)
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] ConnectionStartEvent(49)
2023-05-26 10:51:41,166 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:51:41,166 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] ConnectionStartEvent(50)
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] StatementStartEvent(57)
2023-05-26 10:51:41,166 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,166 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] StatementInfo{statementId=57, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,166 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] StatementEndEvent(57)
2023-05-26 10:51:41,166 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] ConnectionStartEvent(50)
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:51:41,166 DEBUG [mondrian.server.monitor] ConnectionEndEvent(50)
2023-05-26 10:51:41,199 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=3
2023-05-26 10:51:41,199 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=4
2023-05-26 10:51:41,199 DEBUG [mondrian.server.monitor] ConnectionStartEvent(51)
2023-05-26 10:51:41,199 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,199 DEBUG [mondrian.server.monitor] StatementStartEvent(58)
2023-05-26 10:51:41,199 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=4
2023-05-26 10:51:41,199 DEBUG [mondrian.server.monitor] StatementInfo{statementId=58, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,199 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=4
2023-05-26 10:51:41,199 DEBUG [mondrian.server.monitor] StatementEndEvent(58)
2023-05-26 10:51:41,199 DEBUG [mondrian.server.monitor] ConnectionStartEvent(51)
2023-05-26 10:51:41,199 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:51:41,199 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:51:41,199 DEBUG [mondrian.server.monitor] ConnectionStartEvent(52)
2023-05-26 10:51:41,199 DEBUG [mondrian.server.monitor] StatementStartEvent(59)
2023-05-26 10:51:41,199 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,200 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:51:41,200 DEBUG [mondrian.server.monitor] StatementInfo{statementId=59, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,200 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,200 DEBUG [mondrian.server.monitor] StatementEndEvent(59)
2023-05-26 10:51:41,200 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,200 DEBUG [mondrian.server.monitor] ConnectionStartEvent(52)
2023-05-26 10:51:41,200 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:51:41,200 DEBUG [mondrian.server.monitor] ConnectionEndEvent(52)
2023-05-26 10:51:41,207 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=4
2023-05-26 10:51:41,207 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=5
2023-05-26 10:51:41,207 DEBUG [mondrian.server.monitor] ConnectionStartEvent(53)
2023-05-26 10:51:41,207 DEBUG [mondrian.server.monitor] StatementStartEvent(60)
2023-05-26 10:51:41,207 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,207 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=5
2023-05-26 10:51:41,207 DEBUG [mondrian.server.monitor] StatementInfo{statementId=60, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,207 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=5
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] StatementEndEvent(60)
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] ConnectionStartEvent(53)
2023-05-26 10:51:41,208 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:51:41,208 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] ConnectionStartEvent(54)
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] StatementStartEvent(61)
2023-05-26 10:51:41,208 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,208 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] StatementInfo{statementId=61, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] StatementEndEvent(61)
2023-05-26 10:51:41,208 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,208 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] ConnectionStartEvent(54)
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:51:41,208 DEBUG [mondrian.server.monitor] ConnectionEndEvent(54)
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=5
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=6
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] ConnectionStartEvent(55)
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] StatementStartEvent(62)
2023-05-26 10:51:41,209 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=6
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=6
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] StatementInfo{statementId=62, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] StatementEndEvent(62)
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] ConnectionStartEvent(55)
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] ConnectionStartEvent(56)
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] StatementStartEvent(63)
2023-05-26 10:51:41,209 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] StatementInfo{statementId=63, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] StatementEndEvent(63)
2023-05-26 10:51:41,209 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] ConnectionStartEvent(56)
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:51:41,209 DEBUG [mondrian.server.monitor] ConnectionEndEvent(56)
2023-05-26 10:51:45,837 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=6
2023-05-26 10:51:45,837 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=7
2023-05-26 10:51:45,837 DEBUG [mondrian.server.monitor] ConnectionStartEvent(57)
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] StatementStartEvent(64)
2023-05-26 10:51:45,838 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:45,838 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=7
2023-05-26 10:51:45,838 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=7
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] StatementInfo{statementId=64, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] StatementEndEvent(64)
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] ConnectionStartEvent(57)
2023-05-26 10:51:45,838 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:51:45,838 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] ConnectionStartEvent(58)
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] StatementStartEvent(65)
2023-05-26 10:51:45,838 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:51:45,838 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] StatementInfo{statementId=65, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:51:45,838 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] StatementEndEvent(65)
2023-05-26 10:51:45,838 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] ConnectionStartEvent(58)
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:51:45,838 DEBUG [mondrian.server.monitor] ConnectionEndEvent(58)
2023-05-26 10:59:10,483 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=7
2023-05-26 10:59:10,483 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=8
2023-05-26 10:59:10,483 DEBUG [mondrian.server.monitor] ConnectionStartEvent(59)
2023-05-26 10:59:10,483 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,483 DEBUG [mondrian.server.monitor] StatementStartEvent(66)
2023-05-26 10:59:10,483 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=8
2023-05-26 10:59:10,483 DEBUG [mondrian.server.monitor] StatementInfo{statementId=66, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,483 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=8
2023-05-26 10:59:10,483 DEBUG [mondrian.server.monitor] StatementEndEvent(66)
2023-05-26 10:59:10,483 DEBUG [mondrian.server.monitor] ConnectionStartEvent(59)
2023-05-26 10:59:10,483 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:10,483 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:10,483 DEBUG [mondrian.server.monitor] ConnectionStartEvent(60)
2023-05-26 10:59:10,483 DEBUG [mondrian.server.monitor] StatementStartEvent(67)
2023-05-26 10:59:10,483 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,484 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:10,484 DEBUG [mondrian.server.monitor] StatementInfo{statementId=67, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,484 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,484 DEBUG [mondrian.server.monitor] StatementEndEvent(67)
2023-05-26 10:59:10,484 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,484 DEBUG [mondrian.server.monitor] ConnectionStartEvent(60)
2023-05-26 10:59:10,484 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:10,484 DEBUG [mondrian.server.monitor] ConnectionEndEvent(60)
2023-05-26 10:59:10,517 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=8
2023-05-26 10:59:10,517 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=9
2023-05-26 10:59:10,517 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,517 DEBUG [mondrian.server.monitor] ConnectionStartEvent(61)
2023-05-26 10:59:10,517 DEBUG [mondrian.server.monitor] StatementStartEvent(68)
2023-05-26 10:59:10,517 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=9
2023-05-26 10:59:10,517 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=9
2023-05-26 10:59:10,517 DEBUG [mondrian.server.monitor] StatementInfo{statementId=68, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,518 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] StatementEndEvent(68)
2023-05-26 10:59:10,518 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] ConnectionStartEvent(61)
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] ConnectionStartEvent(62)
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] StatementStartEvent(69)
2023-05-26 10:59:10,518 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,518 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:10,518 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,518 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] StatementInfo{statementId=69, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] StatementEndEvent(69)
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] ConnectionStartEvent(62)
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:10,518 DEBUG [mondrian.server.monitor] ConnectionEndEvent(62)
2023-05-26 10:59:10,521 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=9
2023-05-26 10:59:10,522 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=10
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] ConnectionStartEvent(63)
2023-05-26 10:59:10,522 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] StatementStartEvent(70)
2023-05-26 10:59:10,522 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=10
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] StatementInfo{statementId=70, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,522 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=10
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] StatementEndEvent(70)
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] ConnectionStartEvent(63)
2023-05-26 10:59:10,522 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:10,522 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] ConnectionStartEvent(64)
2023-05-26 10:59:10,522 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] StatementStartEvent(71)
2023-05-26 10:59:10,522 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:10,522 DEBUG [mondrian.server.monitor] StatementInfo{statementId=71, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,522 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] StatementEndEvent(71)
2023-05-26 10:59:10,523 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] ConnectionStartEvent(64)
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] ConnectionEndEvent(64)
2023-05-26 10:59:10,523 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=10
2023-05-26 10:59:10,523 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=11
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] ConnectionStartEvent(65)
2023-05-26 10:59:10,523 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] StatementStartEvent(72)
2023-05-26 10:59:10,523 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=11
2023-05-26 10:59:10,523 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=11
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] StatementInfo{statementId=72, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,523 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] StatementEndEvent(72)
2023-05-26 10:59:10,523 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] ConnectionStartEvent(65)
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] ConnectionStartEvent(66)
2023-05-26 10:59:10,523 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:10,523 DEBUG [mondrian.server.monitor] StatementStartEvent(73)
2023-05-26 10:59:10,524 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:10,524 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,524 DEBUG [mondrian.server.monitor] StatementInfo{statementId=73, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:10,524 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:10,524 DEBUG [mondrian.server.monitor] StatementEndEvent(73)
2023-05-26 10:59:10,524 DEBUG [mondrian.server.monitor] ConnectionStartEvent(66)
2023-05-26 10:59:10,524 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:10,524 DEBUG [mondrian.server.monitor] ConnectionEndEvent(66)
2023-05-26 10:59:12,216 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=11
2023-05-26 10:59:12,216 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=12
2023-05-26 10:59:12,216 DEBUG [mondrian.server.monitor] ConnectionStartEvent(67)
2023-05-26 10:59:12,216 DEBUG [mondrian.server.monitor] StatementStartEvent(74)
2023-05-26 10:59:12,216 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:12,216 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=12
2023-05-26 10:59:12,216 DEBUG [mondrian.server.monitor] StatementInfo{statementId=74, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:12,216 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=12
2023-05-26 10:59:12,216 DEBUG [mondrian.server.monitor] StatementEndEvent(74)
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] ConnectionStartEvent(67)
2023-05-26 10:59:12,217 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:12,217 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] ConnectionStartEvent(68)
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] StatementStartEvent(75)
2023-05-26 10:59:12,217 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:12,217 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] StatementInfo{statementId=75, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:12,217 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] StatementEndEvent(75)
2023-05-26 10:59:12,217 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] ConnectionStartEvent(68)
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:12,217 DEBUG [mondrian.server.monitor] ConnectionEndEvent(68)
2023-05-26 10:59:31,675 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=12
2023-05-26 10:59:31,675 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=13
2023-05-26 10:59:31,675 DEBUG [mondrian.server.monitor] ConnectionStartEvent(69)
2023-05-26 10:59:31,675 DEBUG [mondrian.server.monitor] StatementStartEvent(76)
2023-05-26 10:59:31,676 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:31,676 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=13
2023-05-26 10:59:31,676 DEBUG [mondrian.server.monitor] StatementInfo{statementId=76, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:31,676 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=13
2023-05-26 10:59:31,676 DEBUG [mondrian.server.monitor] StatementEndEvent(76)
2023-05-26 10:59:31,676 DEBUG [mondrian.server.monitor] ConnectionStartEvent(69)
2023-05-26 10:59:31,676 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:31,676 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:31,676 DEBUG [mondrian.server.monitor] ConnectionStartEvent(70)
2023-05-26 10:59:31,676 DEBUG [mondrian.server.monitor] StatementStartEvent(77)
2023-05-26 10:59:31,676 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:31,676 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] StatementInfo{statementId=77, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:31,677 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] StatementEndEvent(77)
2023-05-26 10:59:31,677 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] ConnectionStartEvent(70)
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] ConnectionEndEvent(70)
2023-05-26 10:59:31,677 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=13
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] StatementStartEvent(78)
2023-05-26 10:59:31,677 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=13
2023-05-26 10:59:31,677 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=14
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] ConnectionStartEvent(71)
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] StatementStartEvent(79)
2023-05-26 10:59:31,677 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:31,677 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=14
2023-05-26 10:59:31,677 DEBUG [mondrian.server.monitor] StatementInfo{statementId=79, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:31,677 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=14
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] StatementEndEvent(79)
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] ConnectionStartEvent(71)
2023-05-26 10:59:31,678 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:31,678 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] ConnectionStartEvent(72)
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] StatementStartEvent(80)
2023-05-26 10:59:31,678 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:31,678 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] StatementInfo{statementId=80, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:31,678 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] StatementEndEvent(80)
2023-05-26 10:59:31,678 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] ConnectionStartEvent(72)
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:31,678 DEBUG [mondrian.server.monitor] ConnectionEndEvent(72)
2023-05-26 10:59:31,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=14
2023-05-26 10:59:31,679 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=15
2023-05-26 10:59:31,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(73)
2023-05-26 10:59:31,679 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:31,679 DEBUG [mondrian.server.monitor] StatementStartEvent(81)
2023-05-26 10:59:31,679 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=15
2023-05-26 10:59:31,679 DEBUG [mondrian.server.monitor] StatementInfo{statementId=81, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:31,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=15
2023-05-26 10:59:31,679 DEBUG [mondrian.server.monitor] StatementEndEvent(81)
2023-05-26 10:59:31,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(73)
2023-05-26 10:59:31,680 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:31,680 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:31,680 DEBUG [mondrian.server.monitor] ConnectionStartEvent(74)
2023-05-26 10:59:31,680 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:31,680 DEBUG [mondrian.server.monitor] StatementStartEvent(82)
2023-05-26 10:59:31,680 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:31,680 DEBUG [mondrian.server.monitor] StatementInfo{statementId=82, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:31,680 DEBUG [mondrian.server.monitor] StatementEndEvent(82)
2023-05-26 10:59:31,680 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:31,680 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:31,680 DEBUG [mondrian.server.monitor] ConnectionStartEvent(74)
2023-05-26 10:59:31,680 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:31,680 DEBUG [mondrian.server.monitor] ConnectionEndEvent(74)
2023-05-26 10:59:31,680 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS] AS
    {[Time.TimeHierarchy].[Year].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY [~ROWS] ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:31,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 10:59:31,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 10:59:31,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:31,682 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:31,683 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:31,683 DEBUG [mondrian.mdx] 818: with set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:31,683 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:31,683 DEBUG [mondrian.server.monitor] ExecutionStartEvent(818)
2023-05-26 10:59:31,683 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:31,683 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:31,683 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:31,683 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:31,684 DEBUG [mondrian.olap.ResultBase] Named set ~ROWS: starting evaluation
2023-05-26 10:59:31,684 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:31,684 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:31,684 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:31,684 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:32,074 DEBUG [mondrian.sql] 16: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST]
2023-05-26 10:59:32,074 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(16)
2023-05-26 10:59:32,154 DEBUG [mondrian.sql] 16: , exec 79 ms
2023-05-26 10:59:32,154 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec 79 ms
2023-05-26 10:59:32,154 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(16)
2023-05-26 10:59:32,191 DEBUG [mondrian.sql] 16: , exec+fetch 117 ms, 10 rows
2023-05-26 10:59:32,191 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec+fetch 117 ms, 10 rows, ex=17, close=17, open=[]
2023-05-26 10:59:32,192 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=16, sql=select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST}
2023-05-26 10:59:32,192 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(16)
2023-05-26 10:59:32,192 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@3729e687: Named set ~ROWS evaluated to:
[Time.TimeHierarchy].[2013]
[Time.TimeHierarchy].[2014]
[Time.TimeHierarchy].[2015]
[Time.TimeHierarchy].[2016]
[Time.TimeHierarchy].[2017]
[Time.TimeHierarchy].[2018]
[Time.TimeHierarchy].[2019]
[Time.TimeHierarchy].[2020]
[Time.TimeHierarchy].[2021]
[Time.TimeHierarchy].[2022]

2023-05-26 10:59:32,192 DEBUG [mondrian.profile] NamedSet (~ROWS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=508, elementCount=20, elementSquaredCount=200)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Time.TimeHierarchy].[Year]>, resultStyle=VALUE_NOT_NULL, value=[Time.TimeHierarchy].[Year], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year]] invoked 1 times for total of 117ms.  (Avg. 117ms/invocation)

2023-05-26 10:59:32,192 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year]] invoked 1 times for total of 117ms.  (Avg. 117ms/invocation)

2023-05-26 10:59:32,192 DEBUG [mondrian.profile] Axis (ROWS):
~ROWS(name=~ROWS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE, callCount=2, callMillis=508, elementCount=20, elementSquaredCount=200)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year]] invoked 1 times for total of 117ms.  (Avg. 117ms/invocation)

2023-05-26 10:59:32,193 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:32,193 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:32,193 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:32,193 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:32,194 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(818, 0)
2023-05-26 10:59:32,194 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000001000000000000
  Year (12): extract (year from FT_TIME_ID)

2023-05-26 10:59:32,195 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {extract (year from FT_TIME_ID)=('2013')}]
Excluded Regions:[]
Compound Predicates:[]
ID:[5db7849fe086091c3633ed189b4dc957af75ecbe42dd630f843368ac96d5c507]

2023-05-26 10:59:32,195 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {extract (year from FT_TIME_ID)=('2013')}]
Excluded Regions:[]
Compound Predicates:[]
ID:[a8631ba9bce72a1139b9d5921dc8b1d09909c50c382ef2a3c9b3e9cf7668c8db]

2023-05-26 10:59:32,196 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {extract (year from FT_TIME_ID)=('2013')}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8b5953094941b8cb605b78220be7127d339b41d7a61afb3f05bafeb1f1be23ef]

2023-05-26 10:59:32,196 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {extract (year from FT_TIME_ID)=('2013')}]
Excluded Regions:[]
Compound Predicates:[]
ID:[97dce48f1a0e94445f3ab32fcde2df0ecaf9ce3a906f0761aaff8089482201c9]

2023-05-26 10:59:32,196 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {extract (year from FT_TIME_ID)=('2013')}]
Excluded Regions:[]
Compound Predicates:[]
ID:[58004372738a14733fa8fb43feb346733aeb2dbceb6fa6c5ab5b72f4d2189148]

2023-05-26 10:59:32,196 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {extract (year from FT_TIME_ID)=('2013')}]
Excluded Regions:[]
Compound Predicates:[]
ID:[449c02dce36f2f7e456415ed5c6db11cf27ef853c713da5fa65fc0a44b0f69df]

2023-05-26 10:59:32,196 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 1
2023-05-26 10:59:32,196 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 2
2023-05-26 10:59:32,197 DEBUG [mondrian.rolap.agg.AggregationManager] NO MATCH : WSA994_FACTTABLE
Foreign columns bit key=0x0000000000000000000000000000000000000000000000000001000000000000
Measure bit key=        0x0000000000000000000000000000000000000000000111111000000000000000
Agg Stars=[

]
2023-05-26 10:59:32,197 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    extract (year from FT_TIME_ID) = '2013'
group by
    extract (year from FT_TIME_ID)
2023-05-26 10:59:32,197 DEBUG [mondrian.sql] 17: Segment.load: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    extract (year from FT_TIME_ID) = '2013'
group by
    extract (year from FT_TIME_ID)]
2023-05-26 10:59:32,197 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(17)
2023-05-26 10:59:32,209 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[extract (year from FT_TIME_ID)]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {EXTRACT(day FROM FT_TIME_ID)=(*)}
    {WSA994_CUSTOMER.CUSTOMER_ID=(*)}
    {extract (month from FT_TIME_ID)=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[c1938fa1ce1f484109eb2b8859f1bb6a59c64098c6d323398e938f51908f6337]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[63a937e3e7c270232266801647d10c575bbfafd36e1d04ea1d1451f701ede987]
, 12 ms 

2023-05-26 10:59:32,209 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[63a937e3e7c270232266801647d10c575bbfafd36e1d04ea1d1451f701ede987]

2023-05-26 10:59:32,278 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(17)
2023-05-26 10:59:32,278 DEBUG [mondrian.sql] 17: , exec 81 ms
2023-05-26 10:59:32,278 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    extract (year from FT_TIME_ID) = '2013'
group by
    extract (year from FT_TIME_ID)], exec 81 ms
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@50e9cf77
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@2a88b0d6
2023-05-26 10:59:32,279 DEBUG [mondrian.sql] 17: , exec+fetch 82 ms, 1 rows
2023-05-26 10:59:32,279 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    extract (year from FT_TIME_ID) = '2013'
group by
    extract (year from FT_TIME_ID)], exec+fetch 82 ms, 1 rows, ex=18, close=18, open=[]
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=17, sql=select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    extract (year from FT_TIME_ID) = '2013'
group by
    extract (year from FT_TIME_ID)}
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@37483bd5
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(17)
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@662c660e
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@5a5ce16f
2023-05-26 10:59:32,279 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@485f4d77
2023-05-26 10:59:32,280 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@6d00cac6
2023-05-26 10:59:32,280 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@6af13968
2023-05-26 10:59:32,280 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@730c2266
2023-05-26 10:59:32,280 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@5103ae0
2023-05-26 10:59:32,280 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@56c3941
2023-05-26 10:59:32,280 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@89205a
2023-05-26 10:59:32,280 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(818, 1)
2023-05-26 10:59:32,280 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000001000000000000
  Year (12): extract (year from FT_TIME_ID)

2023-05-26 10:59:32,282 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[c06b5b0c6cfd6414ea132cef3ab7cd7a5c335cd0d804dce62c8cd5992aad909a]

2023-05-26 10:59:32,282 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8e667ea7462f663284a8e47c1ba4b9a3e860994c6b2931ed6457b9dc56135eb4]

2023-05-26 10:59:32,282 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[faab3c811a13a64639aa2041f80760a920c2154496eea720bf94bd82418621f9]

2023-05-26 10:59:32,282 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[968ba3fbf8abaf3446eece6430d0579f54849e122192ac0b4ce713a147b09472]

2023-05-26 10:59:32,282 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[bae294d458b2eb3c9224454fd59efd8cc1cc6feb32f6c0d727df53784380fc30]

2023-05-26 10:59:32,282 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[d52fe700c33eac02eac00f411554beb0114b76d7c10e58b05913ee9c1d3c2550]

2023-05-26 10:59:32,283 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 1
2023-05-26 10:59:32,283 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 3
2023-05-26 10:59:32,283 DEBUG [mondrian.rolap.agg.AggregationManager] NO MATCH : WSA994_FACTTABLE
Foreign columns bit key=0x0000000000000000000000000000000000000000000000000001000000000000
Measure bit key=        0x0000000000000000000000000000000000000000000111111000000000000000
Agg Stars=[

]
2023-05-26 10:59:32,283 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
2023-05-26 10:59:32,284 DEBUG [mondrian.sql] 18: Segment.load: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)]
2023-05-26 10:59:32,284 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(18)
2023-05-26 10:59:32,358 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(18)
2023-05-26 10:59:32,358 DEBUG [mondrian.sql] 18: , exec 74 ms
2023-05-26 10:59:32,358 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)], exec 74 ms
2023-05-26 10:59:32,397 DEBUG [mondrian.sql] 18: , exec+fetch 113 ms, 10 rows
2023-05-26 10:59:32,397 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)], exec+fetch 113 ms, 10 rows, ex=19, close=19, open=[]
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=18, sql=select
    extract (year from FT_TIME_ID) as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)}
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@449a59bc
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(18)
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@320fe1c9
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@607bb774
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@51d6b499
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@3228403b
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@55154379
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@7d9cf279
2023-05-26 10:59:32,397 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@1cd73271
2023-05-26 10:59:32,398 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 2 times for total of 195ms.  (Avg. 97ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year]] invoked 1 times for total of 117ms.  (Avg. 117ms/invocation)

2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@511b998b
2023-05-26 10:59:32,398 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 639854kb 81.78%
2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@6b5d03cf
2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@5620d9c7
2023-05-26 10:59:32,398 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@358d8d4d
2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=818, phaseCount=3, cellCacheRequestCount=210, cellCacheHitCount=86, cellCacheMissCount=124, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:59:32,398 DEBUG [mondrian.mdx] 818: exec: 715 ms
2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] ExecutionEndEvent(818)
2023-05-26 10:59:32,398 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=15
2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] StatementInfo{statementId=78, executeStartCount=1, executeEndCount=1, phaseCount=3, cellCacheRequestCount=210, cellCacheHitCount=86, cellCacheMissCount=124, cellCachePendingCount=0, sqlStatementStartCount=3, sqlStatementExecuteCount=3, sqlStatementEndCount=3, sqlStatementRowFetchCount=21, sqlStatementExecuteNanos=235097000, cellRequestCount=60}
2023-05-26 10:59:32,398 DEBUG [mondrian.server.monitor] StatementEndEvent(78)
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=15
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=16
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(75)
2023-05-26 10:59:34,353 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] StatementStartEvent(83)
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=16
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=16
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] StatementInfo{statementId=83, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] StatementEndEvent(83)
2023-05-26 10:59:34,353 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(75)
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(76)
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] StatementStartEvent(84)
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:34,353 DEBUG [mondrian.server.monitor] StatementInfo{statementId=84, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:34,353 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] StatementEndEvent(84)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] ConnectionStartEvent(76)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] ConnectionEndEvent(76)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=16
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] StatementStartEvent(85)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=16
2023-05-26 10:59:34,354 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=17
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] ConnectionStartEvent(77)
2023-05-26 10:59:34,354 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] StatementStartEvent(86)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=17
2023-05-26 10:59:34,354 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=17
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] StatementInfo{statementId=86, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:34,354 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] StatementEndEvent(86)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:34,354 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] ConnectionStartEvent(77)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] ConnectionStartEvent(78)
2023-05-26 10:59:34,354 DEBUG [mondrian.server.monitor] StatementStartEvent(87)
2023-05-26 10:59:34,355 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:34,355 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:34,355 DEBUG [mondrian.server.monitor] StatementInfo{statementId=87, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:34,355 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:34,355 DEBUG [mondrian.server.monitor] StatementEndEvent(87)
2023-05-26 10:59:34,355 DEBUG [mondrian.server.monitor] ConnectionStartEvent(78)
2023-05-26 10:59:34,355 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:34,355 DEBUG [mondrian.server.monitor] ConnectionEndEvent(78)
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=17
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=18
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] ConnectionStartEvent(79)
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] StatementStartEvent(88)
2023-05-26 10:59:34,357 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=18
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] StatementInfo{statementId=88, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=18
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] StatementEndEvent(88)
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] ConnectionStartEvent(79)
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] ConnectionStartEvent(80)
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] StatementStartEvent(89)
2023-05-26 10:59:34,357 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] StatementInfo{statementId=89, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:34,357 DEBUG [mondrian.server.monitor] StatementEndEvent(89)
2023-05-26 10:59:34,357 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:34,358 DEBUG [mondrian.server.monitor] ConnectionStartEvent(80)
2023-05-26 10:59:34,358 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:34,358 DEBUG [mondrian.server.monitor] ConnectionEndEvent(80)
2023-05-26 10:59:34,358 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~COLUMNS] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS] AS
    {[Time.TimeHierarchy].[Year].Members}
SELECT
NON EMPTY CrossJoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
NON EMPTY [~ROWS] ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 10:59:34,359 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 10:59:34,359 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:34,359 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:34,359 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 10:59:34,359 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:34,359 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:34,359 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 10:59:34,359 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:34,359 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 10:59:34,359 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:34,359 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 10:59:34,360 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:34,360 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 10:59:34,360 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:34,360 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 10:59:34,360 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:34,360 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 10:59:34,360 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:34,360 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 10:59:34,360 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:34,360 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 10:59:34,360 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 10:59:34,361 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,361 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapConnection] with set [~COLUMNS] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:34,362 DEBUG [mondrian.mdx] 933: with set [~COLUMNS] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:34,362 DEBUG [mondrian.server.monitor] ExecutionStartEvent(933)
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.olap.ResultBase] Named set ~COLUMNS: starting evaluation
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,362 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,363 DEBUG [mondrian.sql] 19: SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]]: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST]
2023-05-26 10:59:34,363 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(19)
2023-05-26 10:59:34,408 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(19)
2023-05-26 10:59:34,408 DEBUG [mondrian.sql] 19: , exec 45 ms
2023-05-26 10:59:34,408 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]]: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST], exec 45 ms
2023-05-26 10:59:34,408 DEBUG [mondrian.sql] 19: , exec+fetch 45 ms, 2 rows
2023-05-26 10:59:34,408 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]]: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST], exec+fetch 45 ms, 2 rows, ex=20, close=20, open=[]
2023-05-26 10:59:34,408 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=19, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST}
2023-05-26 10:59:34,408 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(19)
2023-05-26 10:59:34,408 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@4cff35df: Named set ~COLUMNS evaluated to:
[Product.ProductHierarchy].[Accessories]
[Product.ProductHierarchy].[MotorBikes]

2023-05-26 10:59:34,409 DEBUG [mondrian.profile] NamedSet (~COLUMNS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=46, elementCount=4, elementSquaredCount=8)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Product.ProductHierarchy].[Division]>, resultStyle=VALUE_NOT_NULL, value=[Product.ProductHierarchy].[Division], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]] invoked 1 times for total of 45ms.  (Avg. 45ms/invocation)

2023-05-26 10:59:34,409 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(933, 0)
2023-05-26 10:59:34,410 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 1
2023-05-26 10:59:34,411 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_PRODUCT.DIVISION_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_PRODUCT.CATEGORY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {WSA994_PRODUCT.PRODUCT_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[813486a1e9bb08f52937e4c859a5d4ff4c24ba1a76814289128067e414e31da6]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8fba2ad8b130f05d19cb8a1fc24b846e8cbfcc68d38ab065c6ff7ea27644bdf0]
, 1 ms 

2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8fba2ad8b130f05d19cb8a1fc24b846e8cbfcc68d38ab065c6ff7ea27644bdf0]

2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[bae294d458b2eb3c9224454fd59efd8cc1cc6feb32f6c0d727df53784380fc30]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[c809a0d8a0be928e5138d0dff71dd5f9c850c859975547b463951a2fbdaeb6bc]
, 0 ms 

2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[c809a0d8a0be928e5138d0dff71dd5f9c850c859975547b463951a2fbdaeb6bc]

2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,412 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(933, 1)
2023-05-26 10:59:34,412 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000000000000000010
  Division (Key) (1): "WSA994_PRODUCT"."DIVISION_ID"

2023-05-26 10:59:34,413 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[02dfa7b03ade04f2d350e0fa3addbfb94d2935eb047ea4284707b67dbf34eeeb]

2023-05-26 10:59:34,413 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[a7d93ed4e7f0aa4a3c6681b453060017b492b068e5670836693bfe98102022bb]

2023-05-26 10:59:34,413 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[d5c479151e8a882dd9d276d3565fdde5fea843a400603898d1100286a9a818e8]

2023-05-26 10:59:34,413 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[7146b70685e49e45bbd0e7be2d7714fe22b20222eb70990008bd659188cdf8a6]

2023-05-26 10:59:34,413 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[d63c286582a489342455e402b7dde6b942c19b22efad37939efd59f55f6bb173]

2023-05-26 10:59:34,413 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[420206b02d15dcb9741bf5cda8dca65707cca49ffede5b89588e62fd5185b8f5]

2023-05-26 10:59:34,414 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 1
2023-05-26 10:59:34,414 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 2
2023-05-26 10:59:34,414 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[c06b5b0c6cfd6414ea132cef3ab7cd7a5c335cd0d804dce62c8cd5992aad909a]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[b32cf1e11666112363ca615ed8857601ca40db59775b039a4a6bb99f995b7378]
, 0 ms 

2023-05-26 10:59:34,414 DEBUG [mondrian.rolap.agg.AggregationManager] NO MATCH : WSA994_FACTTABLE
Foreign columns bit key=0x0000000000000000000000000000000000000000000000000000000000000010
Measure bit key=        0x0000000000000000000000000000000000000000000111111000000000000000
Agg Stars=[

]
2023-05-26 10:59:34,414 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[b32cf1e11666112363ca615ed8857601ca40db59775b039a4a6bb99f995b7378]

2023-05-26 10:59:34,414 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID"
2023-05-26 10:59:34,414 DEBUG [mondrian.sql] 20: Segment.load: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID"]
2023-05-26 10:59:34,415 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(20)
2023-05-26 10:59:34,489 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(20)
2023-05-26 10:59:34,489 DEBUG [mondrian.sql] 20: , exec 75 ms
2023-05-26 10:59:34,489 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID"], exec 75 ms
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@84016e
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@4a7c0e0e
2023-05-26 10:59:34,490 DEBUG [mondrian.sql] 20: , exec+fetch 76 ms, 2 rows
2023-05-26 10:59:34,490 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID"], exec+fetch 76 ms, 2 rows, ex=21, close=21, open=[]
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@5ec6a056
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=20, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID"}
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@416cf0a1
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(20)
2023-05-26 10:59:34,490 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@6f9de98a
2023-05-26 10:59:34,490 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@6247f233
2023-05-26 10:59:34,490 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@4c0b8bcf
2023-05-26 10:59:34,490 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@3bf9fcd3
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@6ca46c51
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@11df89dc
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@78ba583
2023-05-26 10:59:34,490 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@118ee3d4
2023-05-26 10:59:34,491 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(933, 2)
2023-05-26 10:59:34,491 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:34,491 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8e667ea7462f663284a8e47c1ba4b9a3e860994c6b2931ed6457b9dc56135eb4]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[6ce85e2d62370573cc4e729c3d5c98c29418971b3003b01aad94b37189bb8ba2]
, 0 ms 

2023-05-26 10:59:34,491 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[6ce85e2d62370573cc4e729c3d5c98c29418971b3003b01aad94b37189bb8ba2]

2023-05-26 10:59:34,492 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,492 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,492 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,492 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,492 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(933, 3)
2023-05-26 10:59:34,492 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:34,492 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[968ba3fbf8abaf3446eece6430d0579f54849e122192ac0b4ce713a147b09472]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[3d0269324247cfbbfb82bfc2b3c8dd7828ab78d1ad2b82967a1a25f91fbe5da4]
, 0 ms 

2023-05-26 10:59:34,492 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[3d0269324247cfbbfb82bfc2b3c8dd7828ab78d1ad2b82967a1a25f91fbe5da4]

2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,493 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(933, 4)
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[d52fe700c33eac02eac00f411554beb0114b76d7c10e58b05913ee9c1d3c2550]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[94e381e637f6dc25c73f79f666bd91de922b2701124b5cdaa08b3f13ad4a3377]
, 0 ms 

2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[94e381e637f6dc25c73f79f666bd91de922b2701124b5cdaa08b3f13ad4a3377]

2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,493 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,494 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(933, 5)
2023-05-26 10:59:34,494 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:34,494 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[d5c479151e8a882dd9d276d3565fdde5fea843a400603898d1100286a9a818e8]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[4409ff19f68568b82a1288a4b8e39ff1d447b4f555393c446ff056e8b437c52d]
, 0 ms 

2023-05-26 10:59:34,494 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[]
Excluded Regions:[]
Compound Predicates:[]
ID:[4409ff19f68568b82a1288a4b8e39ff1d447b4f555393c446ff056e8b437c52d]

2023-05-26 10:59:34,494 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,494 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,494 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,494 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,495 DEBUG [mondrian.olap.ResultBase] Named set ~ROWS: starting evaluation
2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,495 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@19c01a21: Named set ~ROWS evaluated to:
[Time.TimeHierarchy].[2013]
[Time.TimeHierarchy].[2014]
[Time.TimeHierarchy].[2015]
[Time.TimeHierarchy].[2016]
[Time.TimeHierarchy].[2017]
[Time.TimeHierarchy].[2018]
[Time.TimeHierarchy].[2019]
[Time.TimeHierarchy].[2020]
[Time.TimeHierarchy].[2021]
[Time.TimeHierarchy].[2022]

2023-05-26 10:59:34,495 DEBUG [mondrian.profile] NamedSet (~ROWS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=20, elementSquaredCount=200)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Time.TimeHierarchy].[Year]>, resultStyle=VALUE_NOT_NULL, value=[Time.TimeHierarchy].[Year], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 76ms.  (Avg. 76ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]] invoked 1 times for total of 45ms.  (Avg. 45ms/invocation)

2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,495 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,496 DEBUG [mondrian.profile] Axis (COLUMNS):
CrossJoinIterCalc(name=CrossJoinIterCalc, class=class mondrian.olap.fun.CrossJoinFunDef$CrossJoinIterCalc, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<member=[Measures].[RevenueUSD]>>>, resultStyle=ITERABLE, callCount=8, callMillis=51, elementCount=0, elementSquaredCount=0)
    ~COLUMNS(name=~COLUMNS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
    SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=8, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=8, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=8, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=8, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=8, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=8, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=8, callMillis=0)

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 76ms.  (Avg. 76ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]] invoked 1 times for total of 45ms.  (Avg. 45ms/invocation)

2023-05-26 10:59:34,496 DEBUG [mondrian.profile] Axis (ROWS):
~ROWS(name=~ROWS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE, callCount=2, callMillis=1, elementCount=20, elementSquaredCount=200)

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 76ms.  (Avg. 76ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]] invoked 1 times for total of 45ms.  (Avg. 45ms/invocation)

2023-05-26 10:59:34,497 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:34,497 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:34,497 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:34,497 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:34,498 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(933, 6)
2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000001000000000010
  Division (Key) (1): "WSA994_PRODUCT"."DIVISION_ID"
  Year (12): extract (year from FT_TIME_ID)

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[53713a3df99c481d06a76530e0cd4e4166c5f74c112ded653679908702a2ab8f]

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[f52652ac770994d8cedf6eb4b9b606032e38a667a91fcc9eb9da9cb4f2bcc95a]

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[6ed70f431c930e54525f4be9c7955ddbe2e0453b8c1aecc7a9978f5203834f3b]

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[9ca10b70a08bf3ec39cfb57d9a2d95e782f9347478ffd4b6f911a8b64f094ce3]

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[793be91480989b75fdafc95f36fe5642d6f1c667389c43a6cf48f0c64c25d239]

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[fa1f677e7451cb6b2615552abe89411336508c8bdede3d0711841e1c7c26bff8]

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[e4bb416965036440560a71ccdac555b32adec5f82db6523e10c31638b4e266c6]

2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 0
2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.agg.AggregationManager] NO MATCH : WSA994_FACTTABLE
Foreign columns bit key=0x0000000000000000000000000000000000000000000000000001000000000010
Measure bit key=        0x0000000000000000000000000000000000000000001111111000000000000000
Agg Stars=[

]
2023-05-26 10:59:34,498 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    extract (year from FT_TIME_ID) as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    extract (year from FT_TIME_ID)
2023-05-26 10:59:34,500 DEBUG [mondrian.sql] 21: Segment.load: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    extract (year from FT_TIME_ID) as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    extract (year from FT_TIME_ID)]
2023-05-26 10:59:34,502 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(21)
2023-05-26 10:59:34,588 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(21)
2023-05-26 10:59:34,588 DEBUG [mondrian.sql] 21: , exec 88 ms
2023-05-26 10:59:34,588 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    extract (year from FT_TIME_ID) as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    extract (year from FT_TIME_ID)], exec 88 ms
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@5b29f199
2023-05-26 10:59:34,663 DEBUG [mondrian.sql] 21: , exec+fetch 163 ms, 20 rows
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@4c054dbc
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@50af0542
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@38ee2f8b
2023-05-26 10:59:34,663 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    extract (year from FT_TIME_ID) as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    extract (year from FT_TIME_ID)], exec+fetch 163 ms, 20 rows, ex=22, close=22, open=[]
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@5592d023
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@b19927
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=21, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    extract (year from FT_TIME_ID) as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    extract (year from FT_TIME_ID)}
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@30a92fb7
2023-05-26 10:59:34,663 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(21)
2023-05-26 10:59:34,664 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@33e41906
2023-05-26 10:59:34,664 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@2498b502
2023-05-26 10:59:34,664 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@556ada6b
2023-05-26 10:59:34,664 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@c3531c6
2023-05-26 10:59:34,664 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@1cb1253a
2023-05-26 10:59:34,664 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@41f9c6
2023-05-26 10:59:34,664 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@5fe1ed47
2023-05-26 10:59:34,664 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 2 times for total of 239ms.  (Avg. 119ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division]] invoked 1 times for total of 45ms.  (Avg. 45ms/invocation)

2023-05-26 10:59:34,664 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 635639kb 81.24%
2023-05-26 10:59:34,664 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:34,665 DEBUG [mondrian.mdx] 933: exec: 303 ms
2023-05-26 10:59:34,665 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=933, phaseCount=8, cellCacheRequestCount=784, cellCacheHitCount=464, cellCacheMissCount=320, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:59:34,665 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=18
2023-05-26 10:59:34,665 DEBUG [mondrian.server.monitor] ExecutionEndEvent(933)
2023-05-26 10:59:34,665 DEBUG [mondrian.server.monitor] StatementInfo{statementId=85, executeStartCount=1, executeEndCount=1, phaseCount=8, cellCacheRequestCount=784, cellCacheHitCount=464, cellCacheMissCount=320, cellCachePendingCount=0, sqlStatementStartCount=3, sqlStatementExecuteCount=3, sqlStatementEndCount=3, sqlStatementRowFetchCount=24, sqlStatementExecuteNanos=209008900, cellRequestCount=152}
2023-05-26 10:59:34,665 DEBUG [mondrian.server.monitor] StatementEndEvent(85)
2023-05-26 10:59:35,439 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=18
2023-05-26 10:59:35,439 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=19
2023-05-26 10:59:35,439 DEBUG [mondrian.server.monitor] ConnectionStartEvent(81)
2023-05-26 10:59:35,439 DEBUG [mondrian.server.monitor] StatementStartEvent(90)
2023-05-26 10:59:35,439 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:35,439 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=19
2023-05-26 10:59:35,439 DEBUG [mondrian.server.monitor] StatementInfo{statementId=90, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:35,439 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=19
2023-05-26 10:59:35,439 DEBUG [mondrian.server.monitor] StatementEndEvent(90)
2023-05-26 10:59:35,439 DEBUG [mondrian.server.monitor] ConnectionStartEvent(81)
2023-05-26 10:59:35,439 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:35,439 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:35,439 DEBUG [mondrian.server.monitor] ConnectionStartEvent(82)
2023-05-26 10:59:35,439 DEBUG [mondrian.server.monitor] StatementStartEvent(91)
2023-05-26 10:59:35,440 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementInfo{statementId=91, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementEndEvent(91)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] ConnectionStartEvent(82)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] ConnectionEndEvent(82)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=19
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementStartEvent(92)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=19
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=20
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] ConnectionStartEvent(83)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementStartEvent(93)
2023-05-26 10:59:35,440 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=20
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementInfo{statementId=93, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=20
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementEndEvent(93)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] ConnectionStartEvent(83)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] ConnectionStartEvent(84)
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementStartEvent(94)
2023-05-26 10:59:35,440 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:35,440 DEBUG [mondrian.server.monitor] StatementInfo{statementId=94, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:35,440 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:35,441 DEBUG [mondrian.server.monitor] StatementEndEvent(94)
2023-05-26 10:59:35,441 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:35,441 DEBUG [mondrian.server.monitor] ConnectionStartEvent(84)
2023-05-26 10:59:35,441 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:35,441 DEBUG [mondrian.server.monitor] ConnectionEndEvent(84)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=20
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=21
2023-05-26 10:59:35,442 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] ConnectionStartEvent(85)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] StatementStartEvent(95)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=21
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=21
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] StatementInfo{statementId=95, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:35,442 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] StatementEndEvent(95)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] ConnectionStartEvent(85)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] ConnectionStartEvent(86)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] StatementStartEvent(96)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] StatementInfo{statementId=96, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:35,442 DEBUG [mondrian.server.monitor] StatementEndEvent(96)
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:35,442 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:35,443 DEBUG [mondrian.server.monitor] ConnectionStartEvent(86)
2023-05-26 10:59:35,443 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:35,443 DEBUG [mondrian.server.monitor] ConnectionEndEvent(86)
2023-05-26 10:59:35,443 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~COLUMNS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~COLUMNS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SET [~ROWS] AS
    {[Time.TimeHierarchy].[Year].Members}
SELECT
NON EMPTY CrossJoin(NonEmptyCrossJoin([~COLUMNS_Product_Product.ProductHierarchy], [~COLUMNS_Customer_Customer.CustomerHierarchy]), {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
NON EMPTY [~ROWS] ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 10:59:35,444 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 10:59:35,444 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 10:59:35,444 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 10:59:35,444 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:35,444 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 10:59:35,444 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:35,445 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 10:59:35,445 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:35,445 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 10:59:35,445 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:35,445 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 10:59:35,445 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:35,445 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 10:59:35,445 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:35,445 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 10:59:35,445 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:35,445 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:35,446 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 10:59:35,446 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:35,447 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 10:59:35,447 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:35,447 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 10:59:35,447 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:35,447 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:35,449 DEBUG [mondrian.rolap.RolapConnection] with set [~COLUMNS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~COLUMNS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin(NonEmptyCrossJoin([~COLUMNS_Product_Product.ProductHierarchy], [~COLUMNS_Customer_Customer.CustomerHierarchy]), {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:35,450 DEBUG [mondrian.mdx] 1067: with set [~COLUMNS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~COLUMNS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin(NonEmptyCrossJoin([~COLUMNS_Product_Product.ProductHierarchy], [~COLUMNS_Customer_Customer.CustomerHierarchy]), {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:35,451 DEBUG [mondrian.server.monitor] ExecutionStartEvent(1067)
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:35,451 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:35,452 DEBUG [mondrian.sql] 22: SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 10:59:35,453 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(22)
2023-05-26 10:59:35,539 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(22)
2023-05-26 10:59:35,539 DEBUG [mondrian.sql] 22: , exec 85 ms
2023-05-26 10:59:35,539 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 85 ms
2023-05-26 10:59:35,539 DEBUG [mondrian.sql] 22: , exec+fetch 87 ms, 4 rows
2023-05-26 10:59:35,539 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 87 ms, 4 rows, ex=23, close=23, open=[]
2023-05-26 10:59:35,539 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=22, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 10:59:35,539 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(22)
2023-05-26 10:59:35,540 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1067, 0)
2023-05-26 10:59:35,540 DEBUG [mondrian.sql] 23: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct "COUNTRY_ID") from "DB_2631075"."WSA994_CUSTOMER"]
2023-05-26 10:59:35,540 DEBUG [mondrian.server.monitor] ExecutionStartEvent(1068)
2023-05-26 10:59:35,540 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(23)
2023-05-26 10:59:35,583 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(23)
2023-05-26 10:59:35,583 DEBUG [mondrian.sql] 23: , exec 43 ms
2023-05-26 10:59:35,583 DEBUG [mondrian.rolap.RolapUtil] SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct "COUNTRY_ID") from "DB_2631075"."WSA994_CUSTOMER"], exec 43 ms
2023-05-26 10:59:35,583 DEBUG [mondrian.sql] 23: , exec+fetch 43 ms, 1 rows
2023-05-26 10:59:35,583 DEBUG [mondrian.rolap.RolapUtil] SqlStatisticsProvider.getColumnCardinality: done executing sql [select count(distinct "COUNTRY_ID") from "DB_2631075"."WSA994_CUSTOMER"], exec+fetch 43 ms, 1 rows, ex=24, close=24, open=[]
2023-05-26 10:59:35,583 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(23)
2023-05-26 10:59:35,583 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000000000001000010
  Division (Key) (1): "WSA994_PRODUCT"."DIVISION_ID"
  Country (6): "WSA994_CUSTOMER"."COUNTRY_ID"

2023-05-26 10:59:35,585 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[a0efac1617dd16bb43260f04b24e77773a59a6aabeedf0f29c9572cb6d7f8ee9]

2023-05-26 10:59:35,585 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[1ff67e1306e72ef1305dffba78b302a8ddcb35c0c16b968b199752d3b0d2bfc2]

2023-05-26 10:59:35,585 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[994742f96d609d5eb100d4899cacde8c3fc3f15e7fcc4f3c5f3af2b12307952d]

2023-05-26 10:59:35,585 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[d646beb42bf32ed366c50bf64d2a7518c9d9049fb39b976e11b31a851dc64c96]

2023-05-26 10:59:35,585 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[f8c6b0221189f48c045a7fb667a70c133497d98792e1f106b109f8f55337d68b]

2023-05-26 10:59:35,585 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[45286f9f831da98eb90f34cdf4887697706f4a7880464bd4369672125dfa18e8]

2023-05-26 10:59:35,585 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[be2951451a4be343915d64969a20504d336209a655ed06a65f5db1aa3d7e75ca]

2023-05-26 10:59:35,586 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 2
2023-05-26 10:59:35,586 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 3
2023-05-26 10:59:35,586 DEBUG [mondrian.rolap.agg.AggregationManager] NO MATCH : WSA994_FACTTABLE
Foreign columns bit key=0x0000000000000000000000000000000000000000000000000000000001000010
Measure bit key=        0x0000000000000000000000000000000000000000001111111000000000000000
Agg Stars=[

]
2023-05-26 10:59:35,586 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID"
2023-05-26 10:59:35,586 DEBUG [mondrian.sql] 24: Segment.load: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID"]
2023-05-26 10:59:35,587 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(24)
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(24)
2023-05-26 10:59:35,679 DEBUG [mondrian.sql] 24: , exec 92 ms
2023-05-26 10:59:35,679 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID"], exec 92 ms
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@603724e5
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@4cdef394
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@4af2403a
2023-05-26 10:59:35,679 DEBUG [mondrian.sql] 24: , exec+fetch 93 ms, 4 rows
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@4fe4d1e6
2023-05-26 10:59:35,679 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID"], exec+fetch 93 ms, 4 rows, ex=25, close=25, open=[]
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@d5f3076
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@5a69b5d5
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=24, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID"}
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@6661fa2d
2023-05-26 10:59:35,679 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(24)
2023-05-26 10:59:35,680 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@3f28fa08
2023-05-26 10:59:35,680 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@a32e00a
2023-05-26 10:59:35,680 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@67038e47
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:35,680 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@314be08b
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:35,680 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@13abde51
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:35,680 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@58497ca5
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:35,680 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@4f99bd64
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:35,680 DEBUG [mondrian.olap.ResultBase] Named set ~ROWS: starting evaluation
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:35,680 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:35,680 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@535c6811: Named set ~ROWS evaluated to:
[Time.TimeHierarchy].[2013]
[Time.TimeHierarchy].[2014]
[Time.TimeHierarchy].[2015]
[Time.TimeHierarchy].[2016]
[Time.TimeHierarchy].[2017]
[Time.TimeHierarchy].[2018]
[Time.TimeHierarchy].[2019]
[Time.TimeHierarchy].[2020]
[Time.TimeHierarchy].[2021]
[Time.TimeHierarchy].[2022]

2023-05-26 10:59:35,681 DEBUG [mondrian.profile] NamedSet (~ROWS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=20, elementSquaredCount=200)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Time.TimeHierarchy].[Year]>, resultStyle=VALUE_NOT_NULL, value=[Time.TimeHierarchy].[Year], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 93ms.  (Avg. 93ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 87ms.  (Avg. 87ms/invocation)

2023-05-26 10:59:35,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:35,681 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:35,681 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:35,681 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:35,681 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:35,682 DEBUG [mondrian.profile] Axis (COLUMNS):
CrossJoinIterCalc(name=CrossJoinIterCalc, class=class mondrian.olap.fun.CrossJoinFunDef$CrossJoinIterCalc, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>, MemberType<member=[Measures].[RevenueUSD]>>>, resultStyle=ITERABLE, callCount=3, callMillis=89, elementCount=0, elementSquaredCount=0)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~COLUMNS_Product_Product.ProductHierarchy(name=~COLUMNS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~COLUMNS_Customer_Customer.CustomerHierarchy(name=~COLUMNS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)
    SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=3, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=3, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=3, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=3, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=3, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=3, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=3, callMillis=0)

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 93ms.  (Avg. 93ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 87ms.  (Avg. 87ms/invocation)

2023-05-26 10:59:35,682 DEBUG [mondrian.profile] Axis (ROWS):
~ROWS(name=~ROWS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE, callCount=2, callMillis=1, elementCount=20, elementSquaredCount=200)

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 93ms.  (Avg. 93ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 87ms.  (Avg. 87ms/invocation)

2023-05-26 10:59:35,683 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:35,683 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:35,683 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:35,683 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:35,684 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1067, 1)
2023-05-26 10:59:35,684 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000001000001000010
  Division (Key) (1): "WSA994_PRODUCT"."DIVISION_ID"
  Country (6): "WSA994_CUSTOMER"."COUNTRY_ID"
  Year (12): extract (year from FT_TIME_ID)

2023-05-26 10:59:35,685 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[7f2200edd8fcf5bf0481ba22bf23c1ebb0d4394e1d3edccd6ac3bc4917beaaf1]

2023-05-26 10:59:35,685 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[23b5f436d6fe005a865c7825283b2c4a39f60d10bd9316ccb1f201aaa6c95c03]

2023-05-26 10:59:35,685 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[b8d781e121bf24fda6fd3a82aadd5419b50c5b6e6ca6a4a850fcce205e9cb87b]

2023-05-26 10:59:35,686 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[2d5065f98c46f5c654916ad08c5637751cd7e8f98a1c4b53813cf439c1291e6f]

2023-05-26 10:59:35,686 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[572427979b49caa6c4db0d561511848833514c707404d6aa71b61ad2a5c13071]

2023-05-26 10:59:35,686 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[41f00b8f9cdeaa0ee366d5b7018b42349221d5f74566b21896237b997c332e53]

2023-05-26 10:59:35,686 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}
    {extract (year from FT_TIME_ID)=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8ca4f2f3d94d08284667c180b9ebf5f1eb2034879e0e711544158beeb1ec089e]

2023-05-26 10:59:35,686 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 1
2023-05-26 10:59:35,686 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 2
2023-05-26 10:59:35,687 DEBUG [mondrian.rolap.agg.AggregationManager] NO MATCH : WSA994_FACTTABLE
Foreign columns bit key=0x0000000000000000000000000000000000000000000000000001000001000010
Measure bit key=        0x0000000000000000000000000000000000000000001111111000000000000000
Agg Stars=[

]
2023-05-26 10:59:35,687 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    extract (year from FT_TIME_ID) as "c2",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)
2023-05-26 10:59:35,687 DEBUG [mondrian.sql] 25: Segment.load: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    extract (year from FT_TIME_ID) as "c2",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)]
2023-05-26 10:59:35,687 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(25)
2023-05-26 10:59:35,790 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(25)
2023-05-26 10:59:35,790 DEBUG [mondrian.sql] 25: , exec 102 ms
2023-05-26 10:59:35,790 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    extract (year from FT_TIME_ID) as "c2",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)], exec 102 ms
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@7c78a6e5
2023-05-26 10:59:35,939 DEBUG [mondrian.sql] 25: , exec+fetch 252 ms, 40 rows
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@52b6262d
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@7ff46eec
2023-05-26 10:59:35,939 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    extract (year from FT_TIME_ID) as "c2",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)], exec+fetch 252 ms, 40 rows, ex=26, close=26, open=[]
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@2e5053c6
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@aaaa074
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@335c604a
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@3c17cb48
2023-05-26 10:59:35,939 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@6f83fbc3
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@2f28343b
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@43e14b96
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=25, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c1",
    extract (year from FT_TIME_ID) as "c2",
    sum("WSA994_FACTTABLE"."FT_REVENUEUSD") as "m0",
    sum("WSA994_FACTTABLE"."FT_DISCOUNTUSD") as "m1",
    sum("WSA994_FACTTABLE"."FT_COGMUSD") as "m2",
    sum("WSA994_FACTTABLE"."FT_SALESQUANTITY") as "m3",
    sum("WSA994_FACTTABLE"."FT_NOOFSALESORDERS") as "m4",
    sum("WSA994_FACTTABLE"."FT_NETSALESUSD") as "m5",
    sum("WSA994_FACTTABLE"."FT_REVENUEEUR") as "m6"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)}
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(25)
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@2d58ce27
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@4ebc12ef
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@4c73cdfb
2023-05-26 10:59:35,940 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@2214a1a2
2023-05-26 10:59:35,940 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 2 times for total of 345ms.  (Avg. 172ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 87ms.  (Avg. 87ms/invocation)

2023-05-26 10:59:35,940 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 630588kb 80.60%
2023-05-26 10:59:35,940 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:35,941 DEBUG [mondrian.mdx] 1067: exec: 490 ms
2023-05-26 10:59:35,941 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=1067, phaseCount=3, cellCacheRequestCount=791, cellCacheHitCount=434, cellCacheMissCount=357, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:59:35,941 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=21
2023-05-26 10:59:35,941 DEBUG [mondrian.server.monitor] ExecutionEndEvent(1067)
2023-05-26 10:59:35,941 DEBUG [mondrian.server.monitor] StatementInfo{statementId=92, executeStartCount=1, executeEndCount=1, phaseCount=3, cellCacheRequestCount=791, cellCacheHitCount=434, cellCacheMissCount=357, cellCachePendingCount=0, sqlStatementStartCount=3, sqlStatementExecuteCount=3, sqlStatementEndCount=3, sqlStatementRowFetchCount=48, sqlStatementExecuteNanos=280899900, cellRequestCount=308}
2023-05-26 10:59:35,941 DEBUG [mondrian.server.monitor] StatementEndEvent(92)
2023-05-26 10:59:37,846 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=21
2023-05-26 10:59:37,846 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=22
2023-05-26 10:59:37,846 DEBUG [mondrian.server.monitor] ConnectionStartEvent(87)
2023-05-26 10:59:37,846 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:37,846 DEBUG [mondrian.server.monitor] StatementStartEvent(97)
2023-05-26 10:59:37,846 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=22
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=22
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementInfo{statementId=97, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementEndEvent(97)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionStartEvent(87)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionStartEvent(88)
2023-05-26 10:59:37,847 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementStartEvent(98)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementInfo{statementId=98, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementEndEvent(98)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionStartEvent(88)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=22
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionEndEvent(88)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementStartEvent(99)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=22
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=23
2023-05-26 10:59:37,847 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionStartEvent(89)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=23
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementStartEvent(100)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementInfo{statementId=100, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] StatementEndEvent(100)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=23
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionStartEvent(89)
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:37,847 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:37,847 DEBUG [mondrian.server.monitor] ConnectionStartEvent(90)
2023-05-26 10:59:37,848 DEBUG [mondrian.server.monitor] StatementStartEvent(101)
2023-05-26 10:59:37,848 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:37,848 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:37,848 DEBUG [mondrian.server.monitor] StatementInfo{statementId=101, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:37,848 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:37,848 DEBUG [mondrian.server.monitor] StatementEndEvent(101)
2023-05-26 10:59:37,848 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:37,848 DEBUG [mondrian.server.monitor] ConnectionStartEvent(90)
2023-05-26 10:59:37,848 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:37,848 DEBUG [mondrian.server.monitor] ConnectionEndEvent(90)
2023-05-26 10:59:37,849 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=23
2023-05-26 10:59:37,849 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=24
2023-05-26 10:59:37,849 DEBUG [mondrian.server.monitor] ConnectionStartEvent(91)
2023-05-26 10:59:37,849 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:37,849 DEBUG [mondrian.server.monitor] StatementStartEvent(102)
2023-05-26 10:59:37,850 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=24
2023-05-26 10:59:37,850 DEBUG [mondrian.server.monitor] StatementInfo{statementId=102, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:37,850 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=24
2023-05-26 10:59:37,850 DEBUG [mondrian.server.monitor] StatementEndEvent(102)
2023-05-26 10:59:37,850 DEBUG [mondrian.server.monitor] ConnectionStartEvent(91)
2023-05-26 10:59:37,850 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:37,850 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:37,850 DEBUG [mondrian.server.monitor] ConnectionStartEvent(92)
2023-05-26 10:59:37,850 DEBUG [mondrian.server.monitor] StatementStartEvent(103)
2023-05-26 10:59:37,850 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:37,850 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:37,850 DEBUG [mondrian.server.monitor] StatementInfo{statementId=103, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:37,850 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:37,850 DEBUG [mondrian.server.monitor] StatementEndEvent(103)
2023-05-26 10:59:37,851 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:37,851 DEBUG [mondrian.server.monitor] ConnectionStartEvent(92)
2023-05-26 10:59:37,851 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:37,851 DEBUG [mondrian.server.monitor] ConnectionEndEvent(92)
2023-05-26 10:59:37,851 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~COLUMNS] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SELECT
NON EMPTY CrossJoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Time_Time.TimeHierarchy]) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 10:59:37,852 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 10:59:37,852 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:37,852 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:37,853 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 10:59:37,853 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:37,853 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:37,854 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 10:59:37,854 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:37,854 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:37,854 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 10:59:37,854 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:37,854 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 10:59:37,854 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:37,854 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 10:59:37,854 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:37,854 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 10:59:37,854 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:37,855 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 10:59:37,855 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:37,855 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 10:59:37,855 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:37,855 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 10:59:37,855 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:37,855 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 10:59:37,855 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:37,855 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 10:59:37,855 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:37,855 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 10:59:37,855 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:37,855 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 10:59:37,855 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:37,856 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 10:59:37,856 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:37,857 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,857 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,857 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,857 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapConnection] with set [~COLUMNS] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Time_Time.TimeHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:37,858 DEBUG [mondrian.mdx] 1230: with set [~COLUMNS] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Time_Time.TimeHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,858 DEBUG [mondrian.server.monitor] ExecutionStartEvent(1230)
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.olap.ResultBase] Named set ~COLUMNS: starting evaluation
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,858 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,859 DEBUG [mondrian.sql] 26: SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Country]]: executing sql [
select
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c0"
from
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
group by
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 10:59:37,859 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(26)
2023-05-26 10:59:37,899 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(26)
2023-05-26 10:59:37,898 DEBUG [mondrian.sql] 26: , exec 39 ms
2023-05-26 10:59:37,899 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Country]]: executing sql [select
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c0"
from
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
group by
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 39 ms
2023-05-26 10:59:37,899 DEBUG [mondrian.sql] 26: , exec+fetch 40 ms, 2 rows
2023-05-26 10:59:37,899 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Country]]: done executing sql [select
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c0"
from
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
group by
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 40 ms, 2 rows, ex=27, close=27, open=[]
2023-05-26 10:59:37,899 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=26, sql=select
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c0"
from
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
group by
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 10:59:37,899 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@16268a05: Named set ~COLUMNS evaluated to:
[Customer.CustomerHierarchy].[DE]
[Customer.CustomerHierarchy].[US]

2023-05-26 10:59:37,899 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(26)
2023-05-26 10:59:37,899 DEBUG [mondrian.profile] NamedSet (~COLUMNS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=41, elementCount=4, elementSquaredCount=8)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Customer.CustomerHierarchy].[Country]>, resultStyle=VALUE_NOT_NULL, value=[Customer.CustomerHierarchy].[Country], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 40ms.  (Avg. 40ms/invocation)

2023-05-26 10:59:37,900 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 0)
2023-05-26 10:59:37,901 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 1
2023-05-26 10:59:37,901 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_CUSTOMER.COUNTRY_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[be2951451a4be343915d64969a20504d336209a655ed06a65f5db1aa3d7e75ca]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[74c3d10ce0adcc87ec7351543de9a1b9d99960b2eb6150024e1f2a017e401119]
, 0 ms 

2023-05-26 10:59:37,901 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueEUR]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[74c3d10ce0adcc87ec7351543de9a1b9d99960b2eb6150024e1f2a017e401119]

2023-05-26 10:59:37,901 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,901 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,901 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,901 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,901 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 1)
2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 1
2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_CUSTOMER.COUNTRY_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[f8c6b0221189f48c045a7fb667a70c133497d98792e1f106b109f8f55337d68b]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8ef900fe852bc77ab74f20d188201872dacb7f1274a3ab13dee0c43c80a29eba]
, 0 ms 

2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NoOfSalesOrders]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8ef900fe852bc77ab74f20d188201872dacb7f1274a3ab13dee0c43c80a29eba]

2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,902 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 2)
2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:37,902 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_CUSTOMER.COUNTRY_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[a0efac1617dd16bb43260f04b24e77773a59a6aabeedf0f29c9572cb6d7f8ee9]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[c579c0c1db2e5aeed42a5ef4cde40f4f0cd409eb23546699c0008165ff398647]
, 0 ms 

2023-05-26 10:59:37,904 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[RevenueUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[c579c0c1db2e5aeed42a5ef4cde40f4f0cd409eb23546699c0008165ff398647]

2023-05-26 10:59:37,904 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,904 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,904 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,904 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,904 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 3)
2023-05-26 10:59:37,904 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_CUSTOMER.COUNTRY_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[1ff67e1306e72ef1305dffba78b302a8ddcb35c0c16b968b199752d3b0d2bfc2]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[9c0f549db762c6ebb1f88dc9971313dd12c0c04d9df9a194f190363150ba4c81]
, 1 ms 

2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[DiscountUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[9c0f549db762c6ebb1f88dc9971313dd12c0c04d9df9a194f190363150ba4c81]

2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,905 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 4)
2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_CUSTOMER.COUNTRY_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[d646beb42bf32ed366c50bf64d2a7518c9d9049fb39b976e11b31a851dc64c96]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[919a4149b9baeb854bc674ec272acc26e7744101dbedf0a09b5ee62766cdaa0e]
, 0 ms 

2023-05-26 10:59:37,905 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[SalesQuantity]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[919a4149b9baeb854bc674ec272acc26e7744101dbedf0a09b5ee62766cdaa0e]

2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,906 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 5)
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_CUSTOMER.COUNTRY_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[45286f9f831da98eb90f34cdf4887697706f4a7880464bd4369672125dfa18e8]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8ca16eeaff8386e169eb8f578b0399b9b922a6126bf06eb850c0278c1eb8228c]
, 0 ms 

2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[NetSales]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[8ca16eeaff8386e169eb8f578b0399b9b922a6126bf06eb850c0278c1eb8228c]

2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,906 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,907 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 6)
2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 0
2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.agg.SegmentBuilder] SegmentBuilder.rollup: done rolling up segments with parameters: 
keepColumns=[WSA994_CUSTOMER.COUNTRY_ID]
aggregator=sum
datatype=Numeric
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}
    {WSA994_PRODUCT.DIVISION_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[994742f96d609d5eb100d4899cacde8c3fc3f15e7fcc4f3c5f3af2b12307952d]

Resulted in Segment:  
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[0d82cad8cfdd14efa21d55a639b7ad10a5e27f1576f33cac87d920bb4da40267]
, 0 ms 

2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(127004626).add:
*Segment Header
Schema:[WSA994]
Checksum:[9d53aba3ec30eccec48c427eb94cbdcb]
Cube:[HypercubeDirtBikes]
Measure:[CostOfGoodsSoldUSD]
Axes:[
    {WSA994_CUSTOMER.COUNTRY_ID=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[0d82cad8cfdd14efa21d55a639b7ad10a5e27f1576f33cac87d920bb4da40267]

2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:37,907 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:37,909 DEBUG [mondrian.sql] 27: SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]]: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST]
2023-05-26 10:59:37,910 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(27)
2023-05-26 10:59:37,987 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(27)
2023-05-26 10:59:37,987 DEBUG [mondrian.sql] 27: , exec 77 ms
2023-05-26 10:59:37,987 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]]: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec 77 ms
2023-05-26 10:59:38,061 DEBUG [mondrian.sql] 27: , exec+fetch 152 ms, 20 rows
2023-05-26 10:59:38,061 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]]: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec+fetch 152 ms, 20 rows, ex=28, close=28, open=[]
2023-05-26 10:59:38,062 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=27, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST}
2023-05-26 10:59:38,062 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(27)
2023-05-26 10:59:38,062 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:38,062 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:38,062 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:38,062 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:38,063 DEBUG [mondrian.profile] Axis (COLUMNS):
CrossJoinIterCalc(name=CrossJoinIterCalc, class=class mondrian.olap.fun.CrossJoinFunDef$CrossJoinIterCalc, type=SetType<TupleType<MemberType<level=[Customer.CustomerHierarchy].[Country]>, MemberType<member=[Measures].[RevenueUSD]>>>, resultStyle=ITERABLE, callCount=9, callMillis=44, elementCount=0, elementSquaredCount=0)
    ~COLUMNS(name=~COLUMNS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)
    SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=9, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=9, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=9, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=9, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=9, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=9, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=9, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 152ms.  (Avg. 152ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 40ms.  (Avg. 40ms/invocation)

2023-05-26 10:59:38,063 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:38,063 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Time.TimeHierarchy].[Year]>>>, resultStyle=LIST, callCount=2, callMillis=155, elementCount=40, elementSquaredCount=800)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 152ms.  (Avg. 152ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 40ms.  (Avg. 40ms/invocation)

2023-05-26 10:59:38,064 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:38,064 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:38,064 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:38,064 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:38,064 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(1230, 7)
2023-05-26 10:59:38,067 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 3
2023-05-26 10:59:38,069 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 152ms.  (Avg. 152ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 40ms.  (Avg. 40ms/invocation)

2023-05-26 10:59:38,069 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 624921kb 79.87%
2023-05-26 10:59:38,069 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:38,069 DEBUG [mondrian.mdx] 1230: exec: 211 ms
2023-05-26 10:59:38,069 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=1230, phaseCount=9, cellCacheRequestCount=1127, cellCacheHitCount=742, cellCacheMissCount=385, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:59:38,069 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=24
2023-05-26 10:59:38,069 DEBUG [mondrian.server.monitor] ExecutionEndEvent(1230)
2023-05-26 10:59:38,069 DEBUG [mondrian.server.monitor] StatementInfo{statementId=99, executeStartCount=1, executeEndCount=1, phaseCount=9, cellCacheRequestCount=1127, cellCacheHitCount=742, cellCacheMissCount=385, cellCachePendingCount=0, sqlStatementStartCount=2, sqlStatementExecuteCount=2, sqlStatementEndCount=2, sqlStatementRowFetchCount=22, sqlStatementExecuteNanos=117106900, cellRequestCount=0}
2023-05-26 10:59:38,069 DEBUG [mondrian.server.monitor] StatementEndEvent(99)
2023-05-26 10:59:39,678 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=24
2023-05-26 10:59:39,678 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=25
2023-05-26 10:59:39,678 DEBUG [mondrian.server.monitor] ConnectionStartEvent(93)
2023-05-26 10:59:39,678 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:39,678 DEBUG [mondrian.server.monitor] StatementStartEvent(104)
2023-05-26 10:59:39,678 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=25
2023-05-26 10:59:39,678 DEBUG [mondrian.server.monitor] StatementInfo{statementId=104, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:39,678 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=25
2023-05-26 10:59:39,678 DEBUG [mondrian.server.monitor] StatementEndEvent(104)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(93)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(94)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementStartEvent(105)
2023-05-26 10:59:39,679 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementInfo{statementId=105, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementEndEvent(105)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=25
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(94)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionEndEvent(94)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementStartEvent(106)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=25
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=26
2023-05-26 10:59:39,679 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(95)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementStartEvent(107)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=26
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementInfo{statementId=107, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=26
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementEndEvent(107)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(95)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(96)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementStartEvent(108)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementInfo{statementId=108, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:39,679 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] StatementEndEvent(108)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionStartEvent(96)
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:39,679 DEBUG [mondrian.server.monitor] ConnectionEndEvent(96)
2023-05-26 10:59:39,680 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=26
2023-05-26 10:59:39,680 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=27
2023-05-26 10:59:39,680 DEBUG [mondrian.server.monitor] ConnectionStartEvent(97)
2023-05-26 10:59:39,680 DEBUG [mondrian.server.monitor] StatementStartEvent(109)
2023-05-26 10:59:39,680 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:39,680 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=27
2023-05-26 10:59:39,680 DEBUG [mondrian.server.monitor] StatementInfo{statementId=109, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:39,680 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=27
2023-05-26 10:59:39,680 DEBUG [mondrian.server.monitor] StatementEndEvent(109)
2023-05-26 10:59:39,680 DEBUG [mondrian.server.monitor] ConnectionStartEvent(97)
2023-05-26 10:59:39,680 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:39,681 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:39,681 DEBUG [mondrian.server.monitor] ConnectionStartEvent(98)
2023-05-26 10:59:39,681 DEBUG [mondrian.server.monitor] StatementStartEvent(110)
2023-05-26 10:59:39,681 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:39,681 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:39,681 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:39,681 DEBUG [mondrian.server.monitor] StatementInfo{statementId=110, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:39,681 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:39,681 DEBUG [mondrian.server.monitor] StatementEndEvent(110)
2023-05-26 10:59:39,681 DEBUG [mondrian.server.monitor] ConnectionStartEvent(98)
2023-05-26 10:59:39,681 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:39,681 DEBUG [mondrian.server.monitor] ConnectionEndEvent(98)
2023-05-26 10:59:39,681 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~COLUMNS] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SELECT
NON EMPTY CrossJoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Time_Time.TimeHierarchy]) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 10:59:39,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 10:59:39,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:39,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:39,681 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 10:59:39,681 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:39,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:39,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 10:59:39,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:39,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:39,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 10:59:39,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:39,682 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 10:59:39,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:39,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 10:59:39,682 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:39,682 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 10:59:39,682 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:39,683 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:39,684 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:39,684 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 10:59:39,685 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:39,685 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 10:59:39,685 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:39,685 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 10:59:39,685 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:39,685 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 10:59:39,685 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:39,685 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 10:59:39,685 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:39,685 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 10:59:39,685 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:39,685 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 10:59:39,685 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:39,686 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:39,686 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:39,686 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:39,686 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:39,687 DEBUG [mondrian.rolap.RolapConnection] with set [~COLUMNS] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Time_Time.TimeHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:39,687 DEBUG [mondrian.mdx] 1384: with set [~COLUMNS] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Time_Time.TimeHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:39,687 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:39,687 DEBUG [mondrian.server.monitor] ExecutionStartEvent(1384)
2023-05-26 10:59:39,687 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.olap.ResultBase] Named set ~COLUMNS: starting evaluation
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:39,688 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@16499803: Named set ~COLUMNS evaluated to:
[Customer.CustomerHierarchy].[DE]
[Customer.CustomerHierarchy].[US]

2023-05-26 10:59:39,689 DEBUG [mondrian.profile] NamedSet (~COLUMNS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=4, elementSquaredCount=8)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Customer.CustomerHierarchy].[Country]>, resultStyle=VALUE_NOT_NULL, value=[Customer.CustomerHierarchy].[Country], callCount=2, callMillis=0)

Query Timing (Cumulative):

2023-05-26 10:59:39,691 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:39,692 DEBUG [mondrian.sql] 28: SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]]: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST]
2023-05-26 10:59:39,692 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(28)
2023-05-26 10:59:39,758 DEBUG [mondrian.sql] 28: , exec 66 ms
2023-05-26 10:59:39,758 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]]: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec 66 ms
2023-05-26 10:59:39,758 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(28)
2023-05-26 10:59:39,832 DEBUG [mondrian.sql] 28: , exec+fetch 140 ms, 20 rows
2023-05-26 10:59:39,832 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]]: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec+fetch 140 ms, 20 rows, ex=29, close=29, open=[]
2023-05-26 10:59:39,832 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=28, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    extract (year from FT_TIME_ID) as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST}
2023-05-26 10:59:39,832 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(28)
2023-05-26 10:59:39,832 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:39,832 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:39,832 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:39,832 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:39,832 DEBUG [mondrian.profile] Axis (COLUMNS):
CrossJoinIterCalc(name=CrossJoinIterCalc, class=class mondrian.olap.fun.CrossJoinFunDef$CrossJoinIterCalc, type=SetType<TupleType<MemberType<level=[Customer.CustomerHierarchy].[Country]>, MemberType<member=[Measures].[RevenueUSD]>>>, resultStyle=ITERABLE, callCount=2, callMillis=3, elementCount=0, elementSquaredCount=0)
    ~COLUMNS(name=~COLUMNS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)
    SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 140ms.  (Avg. 140ms/invocation)

2023-05-26 10:59:39,833 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:39,833 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Time.TimeHierarchy].[Year]>>>, resultStyle=LIST, callCount=2, callMillis=142, elementCount=40, elementSquaredCount=800)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 140ms.  (Avg. 140ms/invocation)

2023-05-26 10:59:39,833 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:39,833 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:39,833 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:39,833 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:39,835 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 140ms.  (Avg. 140ms/invocation)

2023-05-26 10:59:39,835 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 622009kb 79.50%
2023-05-26 10:59:39,835 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:39,835 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=1384, phaseCount=1, cellCacheRequestCount=406, cellCacheHitCount=406, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:59:39,835 DEBUG [mondrian.server.monitor] ExecutionEndEvent(1384)
2023-05-26 10:59:39,835 DEBUG [mondrian.mdx] 1384: exec: 148 ms
2023-05-26 10:59:39,836 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=27
2023-05-26 10:59:39,836 DEBUG [mondrian.server.monitor] StatementInfo{statementId=106, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=406, cellCacheHitCount=406, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=20, sqlStatementExecuteNanos=66308700, cellRequestCount=0}
2023-05-26 10:59:39,836 DEBUG [mondrian.server.monitor] StatementEndEvent(106)
2023-05-26 10:59:42,041 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=27
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=28
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] ConnectionStartEvent(99)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementStartEvent(111)
2023-05-26 10:59:42,042 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=28
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementInfo{statementId=111, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementEndEvent(111)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=28
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] ConnectionStartEvent(99)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] ConnectionStartEvent(100)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementStartEvent(112)
2023-05-26 10:59:42,042 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementInfo{statementId=112, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementEndEvent(112)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] ConnectionStartEvent(100)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] ConnectionEndEvent(100)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=28
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementStartEvent(113)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=28
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=29
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] ConnectionStartEvent(101)
2023-05-26 10:59:42,042 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:42,042 DEBUG [mondrian.server.monitor] StatementStartEvent(114)
2023-05-26 10:59:42,042 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=29
2023-05-26 10:59:42,043 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=29
2023-05-26 10:59:42,043 DEBUG [mondrian.server.monitor] StatementInfo{statementId=114, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:42,043 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:42,043 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:42,043 DEBUG [mondrian.server.monitor] StatementEndEvent(114)
2023-05-26 10:59:42,043 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:42,043 DEBUG [mondrian.server.monitor] ConnectionStartEvent(101)
2023-05-26 10:59:42,043 DEBUG [mondrian.server.monitor] ConnectionStartEvent(102)
2023-05-26 10:59:42,043 DEBUG [mondrian.server.monitor] StatementStartEvent(115)
2023-05-26 10:59:42,043 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:42,043 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:42,043 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:42,044 DEBUG [mondrian.server.monitor] StatementInfo{statementId=115, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:42,044 DEBUG [mondrian.server.monitor] StatementEndEvent(115)
2023-05-26 10:59:42,044 DEBUG [mondrian.server.monitor] ConnectionStartEvent(102)
2023-05-26 10:59:42,044 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:42,044 DEBUG [mondrian.server.monitor] ConnectionEndEvent(102)
2023-05-26 10:59:42,045 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=29
2023-05-26 10:59:42,045 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=30
2023-05-26 10:59:42,045 DEBUG [mondrian.server.monitor] ConnectionStartEvent(103)
2023-05-26 10:59:42,045 DEBUG [mondrian.server.monitor] StatementStartEvent(116)
2023-05-26 10:59:42,045 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:42,045 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=30
2023-05-26 10:59:42,046 DEBUG [mondrian.server.monitor] StatementInfo{statementId=116, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:42,046 DEBUG [mondrian.server.monitor] StatementEndEvent(116)
2023-05-26 10:59:42,046 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=30
2023-05-26 10:59:42,046 DEBUG [mondrian.server.monitor] ConnectionStartEvent(103)
2023-05-26 10:59:42,046 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:42,046 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:42,046 DEBUG [mondrian.server.monitor] ConnectionStartEvent(104)
2023-05-26 10:59:42,046 DEBUG [mondrian.server.monitor] StatementStartEvent(117)
2023-05-26 10:59:42,046 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:42,046 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:42,046 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:42,046 DEBUG [mondrian.server.monitor] StatementInfo{statementId=117, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:42,046 DEBUG [mondrian.server.monitor] StatementEndEvent(117)
2023-05-26 10:59:42,046 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:42,047 DEBUG [mondrian.server.monitor] ConnectionStartEvent(104)
2023-05-26 10:59:42,047 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:42,047 DEBUG [mondrian.server.monitor] ConnectionEndEvent(104)
2023-05-26 10:59:42,047 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~COLUMNS] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SELECT
NON EMPTY CrossJoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], [~ROWS_Product_Product.ProductHierarchy]) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 10:59:42,048 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 10:59:42,048 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:42,048 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:42,048 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 10:59:42,048 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:42,048 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:42,048 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 10:59:42,048 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:42,048 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:42,050 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 10:59:42,050 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:42,051 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:42,051 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:42,051 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:42,051 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:42,052 DEBUG [mondrian.rolap.RolapConnection] with set [~COLUMNS] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], [~ROWS_Product_Product.ProductHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:42,052 DEBUG [mondrian.mdx] 1538: with set [~COLUMNS] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
select NON EMPTY Crossjoin([~COLUMNS], {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]}) ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], [~ROWS_Product_Product.ProductHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:42,052 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:42,052 DEBUG [mondrian.server.monitor] ExecutionStartEvent(1538)
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.olap.ResultBase] Named set ~COLUMNS: starting evaluation
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:42,053 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@56674249: Named set ~COLUMNS evaluated to:
[Customer.CustomerHierarchy].[DE]
[Customer.CustomerHierarchy].[US]

2023-05-26 10:59:42,054 DEBUG [mondrian.profile] NamedSet (~COLUMNS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=4, elementSquaredCount=8)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Customer.CustomerHierarchy].[Country]>, resultStyle=VALUE_NOT_NULL, value=[Customer.CustomerHierarchy].[Country], callCount=2, callMillis=0)

Query Timing (Cumulative):

2023-05-26 10:59:42,056 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:42,057 DEBUG [mondrian.sql] 29: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST]
2023-05-26 10:59:42,058 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(29)
2023-05-26 10:59:42,129 DEBUG [mondrian.sql] 29: , exec 72 ms
2023-05-26 10:59:42,130 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST], exec 72 ms
2023-05-26 10:59:42,130 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(29)
2023-05-26 10:59:42,204 DEBUG [mondrian.sql] 29: , exec+fetch 147 ms, 20 rows
2023-05-26 10:59:42,205 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST], exec+fetch 147 ms, 20 rows, ex=30, close=30, open=[]
2023-05-26 10:59:42,205 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=29, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST}
2023-05-26 10:59:42,205 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(29)
2023-05-26 10:59:42,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:42,205 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:42,205 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:42,205 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:42,205 DEBUG [mondrian.profile] Axis (COLUMNS):
CrossJoinIterCalc(name=CrossJoinIterCalc, class=class mondrian.olap.fun.CrossJoinFunDef$CrossJoinIterCalc, type=SetType<TupleType<MemberType<level=[Customer.CustomerHierarchy].[Country]>, MemberType<member=[Measures].[RevenueUSD]>>>, resultStyle=ITERABLE, callCount=2, callMillis=3, elementCount=0, elementSquaredCount=0)
    ~COLUMNS(name=~COLUMNS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)
    SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
        2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
            Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]] invoked 1 times for total of 147ms.  (Avg. 147ms/invocation)

2023-05-26 10:59:42,205 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:42,206 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>>>, resultStyle=LIST, callCount=2, callMillis=149, elementCount=40, elementSquaredCount=800)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]] invoked 1 times for total of 147ms.  (Avg. 147ms/invocation)

2023-05-26 10:59:42,206 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:42,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:42,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:42,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:42,209 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]] invoked 1 times for total of 147ms.  (Avg. 147ms/invocation)

2023-05-26 10:59:42,209 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 618496kb 79.05%
2023-05-26 10:59:42,209 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:42,209 DEBUG [mondrian.mdx] 1538: exec: 157 ms
2023-05-26 10:59:42,210 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=1538, phaseCount=1, cellCacheRequestCount=406, cellCacheHitCount=406, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:59:42,210 DEBUG [mondrian.server.monitor] ExecutionEndEvent(1538)
2023-05-26 10:59:42,211 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=30
2023-05-26 10:59:42,211 DEBUG [mondrian.server.monitor] StatementInfo{statementId=113, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=406, cellCacheHitCount=406, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=20, sqlStatementExecuteNanos=72334100, cellRequestCount=0}
2023-05-26 10:59:42,211 DEBUG [mondrian.server.monitor] StatementEndEvent(113)
2023-05-26 10:59:44,559 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=30
2023-05-26 10:59:44,559 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=31
2023-05-26 10:59:44,559 DEBUG [mondrian.server.monitor] ConnectionStartEvent(105)
2023-05-26 10:59:44,559 DEBUG [mondrian.server.monitor] StatementStartEvent(118)
2023-05-26 10:59:44,559 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:44,559 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=31
2023-05-26 10:59:44,559 DEBUG [mondrian.server.monitor] StatementInfo{statementId=118, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:44,559 DEBUG [mondrian.server.monitor] StatementEndEvent(118)
2023-05-26 10:59:44,559 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=31
2023-05-26 10:59:44,559 DEBUG [mondrian.server.monitor] ConnectionStartEvent(105)
2023-05-26 10:59:44,559 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:44,559 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:44,559 DEBUG [mondrian.server.monitor] ConnectionStartEvent(106)
2023-05-26 10:59:44,559 DEBUG [mondrian.server.monitor] StatementStartEvent(119)
2023-05-26 10:59:44,560 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:44,560 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] StatementInfo{statementId=119, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:44,560 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] StatementEndEvent(119)
2023-05-26 10:59:44,560 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] ConnectionStartEvent(106)
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] ConnectionEndEvent(106)
2023-05-26 10:59:44,560 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=31
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] StatementStartEvent(120)
2023-05-26 10:59:44,560 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=31
2023-05-26 10:59:44,560 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=32
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] ConnectionStartEvent(107)
2023-05-26 10:59:44,560 DEBUG [mondrian.server.monitor] StatementStartEvent(121)
2023-05-26 10:59:44,560 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:44,561 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=32
2023-05-26 10:59:44,561 DEBUG [mondrian.server.monitor] StatementInfo{statementId=121, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:44,561 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=32
2023-05-26 10:59:44,561 DEBUG [mondrian.server.monitor] StatementEndEvent(121)
2023-05-26 10:59:44,561 DEBUG [mondrian.server.monitor] ConnectionStartEvent(107)
2023-05-26 10:59:44,561 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:44,561 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:44,561 DEBUG [mondrian.server.monitor] ConnectionStartEvent(108)
2023-05-26 10:59:44,561 DEBUG [mondrian.server.monitor] StatementStartEvent(122)
2023-05-26 10:59:44,561 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:44,561 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:44,561 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:44,561 DEBUG [mondrian.server.monitor] StatementInfo{statementId=122, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:44,561 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:44,561 DEBUG [mondrian.server.monitor] StatementEndEvent(122)
2023-05-26 10:59:44,562 DEBUG [mondrian.server.monitor] ConnectionStartEvent(108)
2023-05-26 10:59:44,562 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:44,562 DEBUG [mondrian.server.monitor] ConnectionEndEvent(108)
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=32
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=33
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] ConnectionStartEvent(109)
2023-05-26 10:59:44,563 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] StatementStartEvent(123)
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=33
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] StatementInfo{statementId=123, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=33
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] StatementEndEvent(123)
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] ConnectionStartEvent(109)
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 10:59:44,563 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] ConnectionStartEvent(110)
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] StatementStartEvent(124)
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] StatementInfo{statementId=124, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 10:59:44,563 DEBUG [mondrian.server.monitor] StatementEndEvent(124)
2023-05-26 10:59:44,563 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 10:59:44,564 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 10:59:44,564 DEBUG [mondrian.server.monitor] ConnectionStartEvent(110)
2023-05-26 10:59:44,564 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 10:59:44,564 DEBUG [mondrian.server.monitor] ConnectionEndEvent(110)
2023-05-26 10:59:44,564 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 10:59:44,565 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 10:59:44,565 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:44,565 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:44,565 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 10:59:44,565 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:44,565 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:44,565 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 10:59:44,565 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:44,565 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 10:59:44,565 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:44,566 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 10:59:44,566 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:44,567 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 10:59:44,567 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:44,567 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 10:59:44,567 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:44,567 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 10:59:44,567 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:44,567 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:44,568 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:44,568 DEBUG [mondrian.mdx] 1692: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 10:59:44,568 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:44,568 DEBUG [mondrian.server.monitor] ExecutionStartEvent(1692)
2023-05-26 10:59:44,568 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:44,568 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:44,568 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:44,568 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:44,569 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:44,569 DEBUG [mondrian.sql] 30: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 10:59:44,569 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(30)
2023-05-26 10:59:44,663 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(30)
2023-05-26 10:59:44,663 DEBUG [mondrian.sql] 30: , exec 93 ms
2023-05-26 10:59:44,663 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 93 ms
2023-05-26 10:59:44,813 DEBUG [mondrian.sql] 30: , exec+fetch 244 ms, 40 rows
2023-05-26 10:59:44,813 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 244 ms, 40 rows, ex=31, close=31, open=[]
2023-05-26 10:59:44,813 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=30, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 10:59:44,813 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(30)
2023-05-26 10:59:44,814 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 244ms.  (Avg. 244ms/invocation)

2023-05-26 10:59:44,814 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 10:59:44,815 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=245, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 244ms.  (Avg. 244ms/invocation)

2023-05-26 10:59:44,815 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 10:59:44,815 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 10:59:44,815 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 10:59:44,815 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 10:59:44,817 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 244ms.  (Avg. 244ms/invocation)

2023-05-26 10:59:44,817 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 615199kb 78.63%
2023-05-26 10:59:44,817 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 10:59:44,817 DEBUG [mondrian.mdx] 1692: exec: 249 ms
2023-05-26 10:59:44,817 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=1692, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 10:59:44,818 DEBUG [mondrian.server.monitor] ExecutionEndEvent(1692)
2023-05-26 10:59:44,818 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=33
2023-05-26 10:59:44,818 DEBUG [mondrian.server.monitor] StatementInfo{statementId=120, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=93745900, cellRequestCount=0}
2023-05-26 10:59:44,818 DEBUG [mondrian.server.monitor] StatementEndEvent(120)
2023-05-26 11:00:13,948 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=33
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=34
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] ConnectionStartEvent(111)
2023-05-26 11:00:13,949 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] StatementStartEvent(125)
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=34
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] StatementInfo{statementId=125, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=34
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] StatementEndEvent(125)
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] ConnectionStartEvent(111)
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] ConnectionStartEvent(112)
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] StatementStartEvent(126)
2023-05-26 11:00:13,949 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] StatementInfo{statementId=126, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] StatementEndEvent(126)
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] ConnectionStartEvent(112)
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:13,949 DEBUG [mondrian.server.monitor] ConnectionEndEvent(112)
2023-05-26 11:00:13,949 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=34
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] StatementStartEvent(127)
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=34
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=35
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] ConnectionStartEvent(113)
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] StatementStartEvent(128)
2023-05-26 11:00:13,950 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=35
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] StatementInfo{statementId=128, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=35
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] StatementEndEvent(128)
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] ConnectionStartEvent(113)
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] ConnectionStartEvent(114)
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] StatementStartEvent(129)
2023-05-26 11:00:13,950 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:13,950 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] StatementInfo{statementId=129, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] StatementEndEvent(129)
2023-05-26 11:00:13,950 DEBUG [mondrian.server.monitor] ConnectionStartEvent(114)
2023-05-26 11:00:13,951 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:13,951 DEBUG [mondrian.server.monitor] ConnectionEndEvent(114)
2023-05-26 11:00:13,951 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=35
2023-05-26 11:00:13,951 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=36
2023-05-26 11:00:13,952 DEBUG [mondrian.server.monitor] ConnectionStartEvent(115)
2023-05-26 11:00:13,952 DEBUG [mondrian.server.monitor] StatementStartEvent(130)
2023-05-26 11:00:13,952 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:13,952 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=36
2023-05-26 11:00:13,952 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=36
2023-05-26 11:00:13,952 DEBUG [mondrian.server.monitor] StatementInfo{statementId=130, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:13,952 DEBUG [mondrian.server.monitor] StatementEndEvent(130)
2023-05-26 11:00:13,952 DEBUG [mondrian.server.monitor] ConnectionStartEvent(115)
2023-05-26 11:00:13,952 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:13,952 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:13,952 DEBUG [mondrian.server.monitor] ConnectionStartEvent(116)
2023-05-26 11:00:13,952 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:13,952 DEBUG [mondrian.server.monitor] StatementStartEvent(131)
2023-05-26 11:00:13,952 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:13,952 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:13,952 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:13,953 DEBUG [mondrian.server.monitor] StatementInfo{statementId=131, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:13,953 DEBUG [mondrian.server.monitor] StatementEndEvent(131)
2023-05-26 11:00:13,953 DEBUG [mondrian.server.monitor] ConnectionStartEvent(116)
2023-05-26 11:00:13,953 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:13,953 DEBUG [mondrian.server.monitor] ConnectionEndEvent(116)
2023-05-26 11:00:13,953 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:00:13,954 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:00:13,954 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:13,954 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:13,954 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:00:13,954 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:13,954 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:13,955 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:00:13,955 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:13,955 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:13,955 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:00:13,955 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:13,955 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:00:13,955 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:13,955 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:00:13,956 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:13,956 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:00:13,956 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:13,956 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:00:13,956 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:13,956 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:13,956 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:00:13,956 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:13,957 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:00:13,957 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:13,958 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:13,958 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:13,958 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:13,958 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:13,959 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:13,960 DEBUG [mondrian.mdx] 1872: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:13,960 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:13,960 DEBUG [mondrian.server.monitor] ExecutionStartEvent(1872)
2023-05-26 11:00:13,960 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:13,960 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:13,960 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:13,960 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:13,960 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:13,960 DEBUG [mondrian.sql] 31: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:00:13,961 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(31)
2023-05-26 11:00:14,058 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(31)
2023-05-26 11:00:14,058 DEBUG [mondrian.sql] 31: , exec 96 ms
2023-05-26 11:00:14,058 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 96 ms
2023-05-26 11:00:14,205 DEBUG [mondrian.sql] 31: , exec+fetch 244 ms, 40 rows
2023-05-26 11:00:14,205 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 244 ms, 40 rows, ex=32, close=32, open=[]
2023-05-26 11:00:14,205 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=31, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:00:14,205 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(31)
2023-05-26 11:00:14,205 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 244ms.  (Avg. 244ms/invocation)

2023-05-26 11:00:14,205 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:14,206 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=245, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 244ms.  (Avg. 244ms/invocation)

2023-05-26 11:00:14,206 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:14,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:14,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:14,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:14,207 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 244ms.  (Avg. 244ms/invocation)

2023-05-26 11:00:14,207 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 611575kb 78.17%
2023-05-26 11:00:14,207 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:14,208 DEBUG [mondrian.mdx] 1872: exec: 248 ms
2023-05-26 11:00:14,208 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=1872, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:00:14,208 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=36
2023-05-26 11:00:14,208 DEBUG [mondrian.server.monitor] ExecutionEndEvent(1872)
2023-05-26 11:00:14,208 DEBUG [mondrian.server.monitor] StatementInfo{statementId=127, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=96704600, cellRequestCount=0}
2023-05-26 11:00:14,208 DEBUG [mondrian.server.monitor] StatementEndEvent(127)
2023-05-26 11:00:14,211 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=36
2023-05-26 11:00:14,211 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=37
2023-05-26 11:00:14,211 DEBUG [mondrian.server.monitor] ConnectionStartEvent(117)
2023-05-26 11:00:14,211 DEBUG [mondrian.server.monitor] StatementStartEvent(132)
2023-05-26 11:00:14,211 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:14,212 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=37
2023-05-26 11:00:14,212 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=37
2023-05-26 11:00:14,212 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:14,212 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:14,212 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:14,212 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:14,212 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:14,212 DEBUG [mondrian.server.monitor] StatementInfo{statementId=132, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:14,212 DEBUG [mondrian.server.monitor] StatementEndEvent(132)
2023-05-26 11:00:14,212 DEBUG [mondrian.server.monitor] ConnectionStartEvent(117)
2023-05-26 11:00:14,213 DEBUG [mondrian.server.monitor] ConnectionStartEvent(118)
2023-05-26 11:00:14,213 DEBUG [mondrian.server.monitor] StatementStartEvent(133)
2023-05-26 11:00:14,213 DEBUG [mondrian.server.monitor] StatementInfo{statementId=133, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:14,213 DEBUG [mondrian.server.monitor] StatementEndEvent(133)
2023-05-26 11:00:14,212 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:14,213 DEBUG [mondrian.server.monitor] ConnectionStartEvent(118)
2023-05-26 11:00:14,213 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:14,213 DEBUG [mondrian.server.monitor] ConnectionEndEvent(118)
2023-05-26 11:00:22,343 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=37
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=38
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] ConnectionStartEvent(119)
2023-05-26 11:00:22,344 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementStartEvent(134)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=38
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementInfo{statementId=134, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=38
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementEndEvent(134)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] ConnectionStartEvent(119)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] ConnectionStartEvent(120)
2023-05-26 11:00:22,344 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementStartEvent(135)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementInfo{statementId=135, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementEndEvent(135)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=38
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] ConnectionStartEvent(120)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] ConnectionEndEvent(120)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementStartEvent(136)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=38
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=39
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] ConnectionStartEvent(121)
2023-05-26 11:00:22,344 DEBUG [mondrian.server.monitor] StatementStartEvent(137)
2023-05-26 11:00:22,344 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,344 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=39
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] StatementInfo{statementId=137, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,345 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=39
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] StatementEndEvent(137)
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] ConnectionStartEvent(121)
2023-05-26 11:00:22,345 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:22,345 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] ConnectionStartEvent(122)
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] StatementStartEvent(138)
2023-05-26 11:00:22,345 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,345 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:22,345 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,345 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] StatementInfo{statementId=138, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] StatementEndEvent(138)
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] ConnectionStartEvent(122)
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:22,345 DEBUG [mondrian.server.monitor] ConnectionEndEvent(122)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=39
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=40
2023-05-26 11:00:22,346 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] ConnectionStartEvent(123)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] StatementStartEvent(139)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=40
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=40
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] StatementInfo{statementId=139, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] StatementEndEvent(139)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] ConnectionStartEvent(123)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:22,346 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] ConnectionStartEvent(124)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] StatementStartEvent(140)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,346 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] StatementInfo{statementId=140, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] StatementEndEvent(140)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] ConnectionStartEvent(124)
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:22,346 DEBUG [mondrian.server.monitor] ConnectionEndEvent(124)
2023-05-26 11:00:22,346 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:00:22,348 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:00:22,348 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:22,348 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:22,348 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:00:22,348 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:22,348 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:22,348 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:00:22,348 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:22,348 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:22,349 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:00:22,349 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:22,349 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:00:22,349 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:22,349 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:00:22,349 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:22,349 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:00:22,349 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:22,349 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:00:22,349 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:22,349 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:00:22,349 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:22,349 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:00:22,349 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:22,350 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:00:22,350 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:22,351 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:00:22,351 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:22,351 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:00:22,351 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:22,351 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:22,351 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:22,351 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:22,351 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:22,352 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:22,353 DEBUG [mondrian.mdx] 2370: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:22,353 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:22,353 DEBUG [mondrian.server.monitor] ExecutionStartEvent(2370)
2023-05-26 11:00:22,353 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:22,353 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:22,353 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:22,353 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:22,353 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:22,353 DEBUG [mondrian.sql] 32: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:00:22,353 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(32)
2023-05-26 11:00:22,446 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(32)
2023-05-26 11:00:22,446 DEBUG [mondrian.sql] 32: , exec 92 ms
2023-05-26 11:00:22,446 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 92 ms
2023-05-26 11:00:22,595 DEBUG [mondrian.sql] 32: , exec+fetch 241 ms, 40 rows
2023-05-26 11:00:22,595 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 241 ms, 40 rows, ex=33, close=33, open=[]
2023-05-26 11:00:22,595 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=32, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:00:22,595 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(32)
2023-05-26 11:00:22,595 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 241ms.  (Avg. 241ms/invocation)

2023-05-26 11:00:22,595 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:22,595 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=242, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 241ms.  (Avg. 241ms/invocation)

2023-05-26 11:00:22,596 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:22,596 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:22,596 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:22,596 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:22,596 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 241ms.  (Avg. 241ms/invocation)

2023-05-26 11:00:22,596 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 606433kb 77.51%
2023-05-26 11:00:22,597 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:22,597 DEBUG [mondrian.mdx] 2370: exec: 244 ms
2023-05-26 11:00:22,597 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=40
2023-05-26 11:00:22,597 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=2370, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:00:22,597 DEBUG [mondrian.server.monitor] ExecutionEndEvent(2370)
2023-05-26 11:00:22,597 DEBUG [mondrian.server.monitor] StatementInfo{statementId=136, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=92479100, cellRequestCount=0}
2023-05-26 11:00:22,597 DEBUG [mondrian.server.monitor] StatementEndEvent(136)
2023-05-26 11:00:22,598 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=40
2023-05-26 11:00:22,598 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=41
2023-05-26 11:00:22,598 DEBUG [mondrian.server.monitor] ConnectionStartEvent(125)
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] StatementStartEvent(141)
2023-05-26 11:00:22,599 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,599 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=41
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] StatementInfo{statementId=141, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,599 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=41
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] StatementEndEvent(141)
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] ConnectionStartEvent(125)
2023-05-26 11:00:22,599 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:22,599 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] ConnectionStartEvent(126)
2023-05-26 11:00:22,599 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] StatementStartEvent(142)
2023-05-26 11:00:22,599 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:22,599 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] StatementInfo{statementId=142, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:22,599 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] StatementEndEvent(142)
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] ConnectionStartEvent(126)
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:22,599 DEBUG [mondrian.server.monitor] ConnectionEndEvent(126)
2023-05-26 11:00:32,198 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=41
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=42
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] ConnectionStartEvent(127)
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] StatementStartEvent(143)
2023-05-26 11:00:32,199 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=42
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] StatementInfo{statementId=143, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=42
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] StatementEndEvent(143)
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] ConnectionStartEvent(127)
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:32,199 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] ConnectionStartEvent(128)
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] StatementStartEvent(144)
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] StatementInfo{statementId=144, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] StatementEndEvent(144)
2023-05-26 11:00:32,199 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] ConnectionStartEvent(128)
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:32,199 DEBUG [mondrian.server.monitor] ConnectionEndEvent(128)
2023-05-26 11:00:32,200 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=42
2023-05-26 11:00:32,200 DEBUG [mondrian.server.monitor] StatementStartEvent(145)
2023-05-26 11:00:32,200 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=42
2023-05-26 11:00:32,200 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=43
2023-05-26 11:00:32,200 DEBUG [mondrian.server.monitor] ConnectionStartEvent(129)
2023-05-26 11:00:32,200 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,200 DEBUG [mondrian.server.monitor] StatementStartEvent(146)
2023-05-26 11:00:32,201 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=43
2023-05-26 11:00:32,201 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=43
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] StatementInfo{statementId=146, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] StatementEndEvent(146)
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] ConnectionStartEvent(129)
2023-05-26 11:00:32,201 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:32,201 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] ConnectionStartEvent(130)
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] StatementStartEvent(147)
2023-05-26 11:00:32,201 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,201 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] StatementInfo{statementId=147, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] StatementEndEvent(147)
2023-05-26 11:00:32,201 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,201 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] ConnectionStartEvent(130)
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:32,201 DEBUG [mondrian.server.monitor] ConnectionEndEvent(130)
2023-05-26 11:00:32,202 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=43
2023-05-26 11:00:32,202 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=44
2023-05-26 11:00:32,202 DEBUG [mondrian.server.monitor] ConnectionStartEvent(131)
2023-05-26 11:00:32,202 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,202 DEBUG [mondrian.server.monitor] StatementStartEvent(148)
2023-05-26 11:00:32,203 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=44
2023-05-26 11:00:32,203 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=44
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] StatementInfo{statementId=148, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] StatementEndEvent(148)
2023-05-26 11:00:32,203 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] ConnectionStartEvent(131)
2023-05-26 11:00:32,203 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] ConnectionStartEvent(132)
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] StatementStartEvent(149)
2023-05-26 11:00:32,203 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,203 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:32,203 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] StatementInfo{statementId=149, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,203 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] StatementEndEvent(149)
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] ConnectionStartEvent(132)
2023-05-26 11:00:32,203 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:32,203 DEBUG [mondrian.server.monitor] ConnectionEndEvent(132)
2023-05-26 11:00:32,204 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:00:32,204 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:32,204 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:32,204 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:00:32,204 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:32,204 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:32,204 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:00:32,204 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:32,204 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:32,205 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:00:32,205 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:00:32,206 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:32,206 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:00:32,206 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:32,206 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:00:32,206 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:32,206 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:32,207 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:32,207 DEBUG [mondrian.mdx] 2868: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:32,207 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:32,208 DEBUG [mondrian.server.monitor] ExecutionStartEvent(2868)
2023-05-26 11:00:32,208 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:32,208 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:32,208 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:32,208 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:32,208 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:32,208 DEBUG [mondrian.sql] 33: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:00:32,209 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(33)
2023-05-26 11:00:32,297 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(33)
2023-05-26 11:00:32,297 DEBUG [mondrian.sql] 33: , exec 88 ms
2023-05-26 11:00:32,297 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 88 ms
2023-05-26 11:00:32,444 DEBUG [mondrian.sql] 33: , exec+fetch 235 ms, 40 rows
2023-05-26 11:00:32,444 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 235 ms, 40 rows, ex=34, close=34, open=[]
2023-05-26 11:00:32,444 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=33, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:00:32,444 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(33)
2023-05-26 11:00:32,445 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 235ms.  (Avg. 235ms/invocation)

2023-05-26 11:00:32,445 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:32,445 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=236, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 235ms.  (Avg. 235ms/invocation)

2023-05-26 11:00:32,445 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:32,445 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:32,445 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:32,445 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:32,446 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 235ms.  (Avg. 235ms/invocation)

2023-05-26 11:00:32,446 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 602373kb 76.99%
2023-05-26 11:00:32,446 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:32,446 DEBUG [mondrian.mdx] 2868: exec: 239 ms
2023-05-26 11:00:32,446 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=2868, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:00:32,446 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=44
2023-05-26 11:00:32,446 DEBUG [mondrian.server.monitor] ExecutionEndEvent(2868)
2023-05-26 11:00:32,446 DEBUG [mondrian.server.monitor] StatementInfo{statementId=145, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=88374600, cellRequestCount=0}
2023-05-26 11:00:32,446 DEBUG [mondrian.server.monitor] StatementEndEvent(145)
2023-05-26 11:00:32,448 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=44
2023-05-26 11:00:32,448 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=45
2023-05-26 11:00:32,448 DEBUG [mondrian.server.monitor] ConnectionStartEvent(133)
2023-05-26 11:00:32,448 DEBUG [mondrian.server.monitor] StatementStartEvent(150)
2023-05-26 11:00:32,448 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,448 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=45
2023-05-26 11:00:32,448 DEBUG [mondrian.server.monitor] StatementInfo{statementId=150, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,448 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=45
2023-05-26 11:00:32,448 DEBUG [mondrian.server.monitor] StatementEndEvent(150)
2023-05-26 11:00:32,448 DEBUG [mondrian.server.monitor] ConnectionStartEvent(133)
2023-05-26 11:00:32,449 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:32,449 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:32,449 DEBUG [mondrian.server.monitor] ConnectionStartEvent(134)
2023-05-26 11:00:32,449 DEBUG [mondrian.server.monitor] StatementStartEvent(151)
2023-05-26 11:00:32,449 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:32,449 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:32,449 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,449 DEBUG [mondrian.server.monitor] StatementInfo{statementId=151, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:32,449 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:32,449 DEBUG [mondrian.server.monitor] StatementEndEvent(151)
2023-05-26 11:00:32,449 DEBUG [mondrian.server.monitor] ConnectionStartEvent(134)
2023-05-26 11:00:32,449 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:32,449 DEBUG [mondrian.server.monitor] ConnectionEndEvent(134)
2023-05-26 11:00:45,152 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=45
2023-05-26 11:00:45,152 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=46
2023-05-26 11:00:45,152 DEBUG [mondrian.server.monitor] ConnectionStartEvent(135)
2023-05-26 11:00:45,152 DEBUG [mondrian.server.monitor] StatementStartEvent(152)
2023-05-26 11:00:45,152 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,152 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=46
2023-05-26 11:00:45,152 DEBUG [mondrian.server.monitor] StatementInfo{statementId=152, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,152 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=46
2023-05-26 11:00:45,152 DEBUG [mondrian.server.monitor] StatementEndEvent(152)
2023-05-26 11:00:45,152 DEBUG [mondrian.server.monitor] ConnectionStartEvent(135)
2023-05-26 11:00:45,152 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:45,152 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:45,152 DEBUG [mondrian.server.monitor] ConnectionStartEvent(136)
2023-05-26 11:00:45,152 DEBUG [mondrian.server.monitor] StatementStartEvent(153)
2023-05-26 11:00:45,152 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] StatementInfo{statementId=153, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] StatementEndEvent(153)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] ConnectionStartEvent(136)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] ConnectionEndEvent(136)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=46
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] StatementStartEvent(154)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=46
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=47
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] ConnectionStartEvent(137)
2023-05-26 11:00:45,153 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] StatementStartEvent(155)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=47
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] StatementInfo{statementId=155, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=47
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] StatementEndEvent(155)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] ConnectionStartEvent(137)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:45,153 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:45,153 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] ConnectionStartEvent(138)
2023-05-26 11:00:45,153 DEBUG [mondrian.server.monitor] StatementStartEvent(156)
2023-05-26 11:00:45,154 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:45,154 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,154 DEBUG [mondrian.server.monitor] StatementInfo{statementId=156, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,154 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,154 DEBUG [mondrian.server.monitor] StatementEndEvent(156)
2023-05-26 11:00:45,154 DEBUG [mondrian.server.monitor] ConnectionStartEvent(138)
2023-05-26 11:00:45,154 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:45,154 DEBUG [mondrian.server.monitor] ConnectionEndEvent(138)
2023-05-26 11:00:45,155 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=47
2023-05-26 11:00:45,155 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=48
2023-05-26 11:00:45,155 DEBUG [mondrian.server.monitor] ConnectionStartEvent(139)
2023-05-26 11:00:45,155 DEBUG [mondrian.server.monitor] StatementStartEvent(157)
2023-05-26 11:00:45,155 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,155 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=48
2023-05-26 11:00:45,156 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=48
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] StatementInfo{statementId=157, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,156 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] StatementEndEvent(157)
2023-05-26 11:00:45,156 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] ConnectionStartEvent(139)
2023-05-26 11:00:45,156 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] ConnectionStartEvent(140)
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] StatementStartEvent(158)
2023-05-26 11:00:45,156 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:45,156 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] StatementInfo{statementId=158, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,156 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] StatementEndEvent(158)
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] ConnectionStartEvent(140)
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:45,156 DEBUG [mondrian.server.monitor] ConnectionEndEvent(140)
2023-05-26 11:00:45,156 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:00:45,157 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:00:45,158 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:00:45,158 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:00:45,159 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:00:45,159 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:45,159 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:00:45,159 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:45,159 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:00:45,159 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:45,159 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:45,159 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:00:45,160 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:45,160 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:00:45,160 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:45,160 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:00:45,160 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:45,160 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:00:45,160 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:45,160 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:45,162 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:45,162 DEBUG [mondrian.mdx] 3366: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:00:45,162 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:45,162 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:45,162 DEBUG [mondrian.server.monitor] ExecutionStartEvent(3366)
2023-05-26 11:00:45,162 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:45,162 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:45,162 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:45,162 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:45,163 DEBUG [mondrian.sql] 34: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:00:45,163 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(34)
2023-05-26 11:00:45,241 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(34)
2023-05-26 11:00:45,241 DEBUG [mondrian.sql] 34: , exec 79 ms
2023-05-26 11:00:45,241 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 79 ms
2023-05-26 11:00:45,395 DEBUG [mondrian.sql] 34: , exec+fetch 232 ms, 40 rows
2023-05-26 11:00:45,395 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 232 ms, 40 rows, ex=35, close=35, open=[]
2023-05-26 11:00:45,395 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=34, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:00:45,396 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(34)
2023-05-26 11:00:45,396 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 232ms.  (Avg. 232ms/invocation)

2023-05-26 11:00:45,396 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:00:45,397 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=233, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 232ms.  (Avg. 232ms/invocation)

2023-05-26 11:00:45,397 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:00:45,397 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:00:45,398 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:00:45,398 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:00:45,398 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 232ms.  (Avg. 232ms/invocation)

2023-05-26 11:00:45,398 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 598237kb 76.46%
2023-05-26 11:00:45,398 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:00:45,399 DEBUG [mondrian.mdx] 3366: exec: 237 ms
2023-05-26 11:00:45,399 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=3366, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:00:45,399 DEBUG [mondrian.server.monitor] ExecutionEndEvent(3366)
2023-05-26 11:00:45,399 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=48
2023-05-26 11:00:45,399 DEBUG [mondrian.server.monitor] StatementInfo{statementId=154, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=79350000, cellRequestCount=0}
2023-05-26 11:00:45,399 DEBUG [mondrian.server.monitor] StatementEndEvent(154)
2023-05-26 11:00:45,401 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=48
2023-05-26 11:00:45,401 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=49
2023-05-26 11:00:45,401 DEBUG [mondrian.server.monitor] ConnectionStartEvent(141)
2023-05-26 11:00:45,401 DEBUG [mondrian.server.monitor] StatementStartEvent(159)
2023-05-26 11:00:45,401 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,401 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=49
2023-05-26 11:00:45,401 DEBUG [mondrian.server.monitor] StatementInfo{statementId=159, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,401 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=49
2023-05-26 11:00:45,401 DEBUG [mondrian.server.monitor] StatementEndEvent(159)
2023-05-26 11:00:45,401 DEBUG [mondrian.server.monitor] ConnectionStartEvent(141)
2023-05-26 11:00:45,401 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:00:45,401 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:00:45,401 DEBUG [mondrian.server.monitor] ConnectionStartEvent(142)
2023-05-26 11:00:45,401 DEBUG [mondrian.server.monitor] StatementStartEvent(160)
2023-05-26 11:00:45,401 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:00:45,402 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:00:45,402 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,402 DEBUG [mondrian.server.monitor] StatementInfo{statementId=160, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:00:45,402 DEBUG [mondrian.server.monitor] StatementEndEvent(160)
2023-05-26 11:00:45,402 DEBUG [mondrian.server.monitor] ConnectionStartEvent(142)
2023-05-26 11:00:45,402 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:00:45,402 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:00:45,402 DEBUG [mondrian.server.monitor] ConnectionEndEvent(142)
2023-05-26 11:01:04,175 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=49
2023-05-26 11:01:04,175 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=50
2023-05-26 11:01:04,175 DEBUG [mondrian.server.monitor] ConnectionStartEvent(143)
2023-05-26 11:01:04,175 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:01:04,175 DEBUG [mondrian.server.monitor] StatementStartEvent(161)
2023-05-26 11:01:04,175 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=50
2023-05-26 11:01:04,175 DEBUG [mondrian.server.monitor] StatementInfo{statementId=161, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,175 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=50
2023-05-26 11:01:04,175 DEBUG [mondrian.server.monitor] StatementEndEvent(161)
2023-05-26 11:01:04,175 DEBUG [mondrian.server.monitor] ConnectionStartEvent(143)
2023-05-26 11:01:04,175 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:01:04,175 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:01:04,176 DEBUG [mondrian.server.monitor] ConnectionStartEvent(144)
2023-05-26 11:01:04,176 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:01:04,176 DEBUG [mondrian.server.monitor] StatementStartEvent(162)
2023-05-26 11:01:04,176 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:01:04,176 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,176 DEBUG [mondrian.server.monitor] StatementInfo{statementId=162, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,176 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,176 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=50
2023-05-26 11:01:04,176 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=50
2023-05-26 11:01:04,176 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=51
2023-05-26 11:01:04,176 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
