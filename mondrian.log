2023-05-26 11:01:04,177 DEBUG [mondrian.server.monitor] StatementEndEvent(162)
2023-05-26 11:01:04,179 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=51
2023-05-26 11:01:04,179 DEBUG [mondrian.server.monitor] ConnectionStartEvent(144)
2023-05-26 11:01:04,179 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:01:04,179 DEBUG [mondrian.server.monitor] ConnectionEndEvent(144)
2023-05-26 11:01:04,179 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=51
2023-05-26 11:01:04,179 DEBUG [mondrian.server.monitor] StatementStartEvent(163)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] ConnectionStartEvent(145)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] StatementStartEvent(164)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] StatementInfo{statementId=164, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] StatementEndEvent(164)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] ConnectionStartEvent(145)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] ConnectionStartEvent(146)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] StatementStartEvent(165)
2023-05-26 11:01:04,184 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:01:04,184 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:01:04,184 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] StatementInfo{statementId=165, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,184 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] StatementEndEvent(165)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] ConnectionStartEvent(146)
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:01:04,184 DEBUG [mondrian.server.monitor] ConnectionEndEvent(146)
2023-05-26 11:01:04,185 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=51
2023-05-26 11:01:04,185 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=52
2023-05-26 11:01:04,185 DEBUG [mondrian.server.monitor] ConnectionStartEvent(147)
2023-05-26 11:01:04,185 DEBUG [mondrian.server.monitor] StatementStartEvent(166)
2023-05-26 11:01:04,185 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:01:04,185 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=52
2023-05-26 11:01:04,185 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=52
2023-05-26 11:01:04,185 DEBUG [mondrian.server.monitor] StatementInfo{statementId=166, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,185 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:01:04,185 DEBUG [mondrian.server.monitor] StatementEndEvent(166)
2023-05-26 11:01:04,185 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:01:04,185 DEBUG [mondrian.server.monitor] ConnectionStartEvent(147)
2023-05-26 11:01:04,185 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:01:04,185 DEBUG [mondrian.server.monitor] ConnectionStartEvent(148)
2023-05-26 11:01:04,186 DEBUG [mondrian.server.monitor] StatementStartEvent(167)
2023-05-26 11:01:04,186 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:01:04,186 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,186 DEBUG [mondrian.server.monitor] StatementInfo{statementId=167, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,186 DEBUG [mondrian.server.monitor] StatementEndEvent(167)
2023-05-26 11:01:04,186 DEBUG [mondrian.server.monitor] ConnectionStartEvent(148)
2023-05-26 11:01:04,186 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,186 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:01:04,186 DEBUG [mondrian.server.monitor] ConnectionEndEvent(148)
2023-05-26 11:01:04,186 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:01:04,186 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:01:04,186 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:01:04,186 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:01:04,187 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:01:04,187 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:01:04,188 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:01:04,188 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:01:04,188 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:01:04,188 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:01:04,189 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:01:04,189 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:01:04,190 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:01:04,190 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:01:04,190 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:01:04,190 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:01:04,191 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:01:04,191 DEBUG [mondrian.mdx] 3864: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:01:04,191 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:01:04,191 DEBUG [mondrian.server.monitor] ExecutionStartEvent(3864)
2023-05-26 11:01:04,191 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:01:04,191 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:01:04,191 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:01:04,191 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:01:04,192 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:01:04,192 DEBUG [mondrian.sql] 35: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:01:04,192 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(35)
2023-05-26 11:01:04,280 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(35)
2023-05-26 11:01:04,280 DEBUG [mondrian.sql] 35: , exec 87 ms
2023-05-26 11:01:04,280 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 87 ms
2023-05-26 11:01:04,431 DEBUG [mondrian.sql] 35: , exec+fetch 239 ms, 40 rows
2023-05-26 11:01:04,431 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 239 ms, 40 rows, ex=36, close=36, open=[]
2023-05-26 11:01:04,431 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=35, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:01:04,431 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(35)
2023-05-26 11:01:04,432 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 239ms.  (Avg. 239ms/invocation)

2023-05-26 11:01:04,432 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:01:04,432 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=239, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 239ms.  (Avg. 239ms/invocation)

2023-05-26 11:01:04,432 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:01:04,432 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:01:04,432 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:01:04,432 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:01:04,434 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 239ms.  (Avg. 239ms/invocation)

2023-05-26 11:01:04,434 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 594057kb 75.93%
2023-05-26 11:01:04,434 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:01:04,434 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=3864, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:01:04,434 DEBUG [mondrian.mdx] 3864: exec: 243 ms
2023-05-26 11:01:04,434 DEBUG [mondrian.server.monitor] ExecutionEndEvent(3864)
2023-05-26 11:01:04,434 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=52
2023-05-26 11:01:04,434 DEBUG [mondrian.server.monitor] StatementInfo{statementId=163, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=87806500, cellRequestCount=0}
2023-05-26 11:01:04,434 DEBUG [mondrian.server.monitor] StatementEndEvent(163)
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=52
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=53
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] ConnectionStartEvent(149)
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] StatementStartEvent(168)
2023-05-26 11:01:04,437 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=53
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=53
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] StatementInfo{statementId=168, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] StatementEndEvent(168)
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] ConnectionStartEvent(149)
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:01:04,437 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] ConnectionStartEvent(150)
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] StatementStartEvent(169)
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:01:04,437 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,437 DEBUG [mondrian.server.monitor] StatementInfo{statementId=169, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:01:04,438 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:01:04,438 DEBUG [mondrian.server.monitor] StatementEndEvent(169)
2023-05-26 11:01:04,438 DEBUG [mondrian.server.monitor] ConnectionStartEvent(150)
2023-05-26 11:01:04,438 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:01:04,438 DEBUG [mondrian.server.monitor] ConnectionEndEvent(150)
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=53
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=54
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] ConnectionStartEvent(151)
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] StatementStartEvent(170)
2023-05-26 11:05:20,356 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=54
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] StatementInfo{statementId=170, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] StatementEndEvent(170)
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=54
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] ConnectionStartEvent(151)
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] ConnectionStartEvent(152)
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] StatementStartEvent(171)
2023-05-26 11:05:20,356 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] StatementInfo{statementId=171, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] StatementEndEvent(171)
2023-05-26 11:05:20,356 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] ConnectionStartEvent(152)
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:20,356 DEBUG [mondrian.server.monitor] ConnectionEndEvent(152)
2023-05-26 11:05:25,358 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=54
2023-05-26 11:05:25,358 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=55
2023-05-26 11:05:25,358 DEBUG [mondrian.server.monitor] ConnectionStartEvent(153)
2023-05-26 11:05:25,358 DEBUG [mondrian.server.monitor] StatementStartEvent(172)
2023-05-26 11:05:25,358 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:25,358 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=55
2023-05-26 11:05:25,358 DEBUG [mondrian.server.monitor] StatementInfo{statementId=172, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:25,358 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=55
2023-05-26 11:05:25,358 DEBUG [mondrian.server.monitor] StatementEndEvent(172)
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] ConnectionStartEvent(153)
2023-05-26 11:05:25,359 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:25,359 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:25,359 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] ConnectionStartEvent(154)
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] StatementStartEvent(173)
2023-05-26 11:05:25,359 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:25,359 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] StatementInfo{statementId=173, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:25,359 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] StatementEndEvent(173)
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] ConnectionStartEvent(154)
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:25,359 DEBUG [mondrian.server.monitor] ConnectionEndEvent(154)
2023-05-26 11:05:33,570 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=55
2023-05-26 11:05:33,570 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=56
2023-05-26 11:05:33,570 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:33,570 DEBUG [mondrian.server.monitor] ConnectionStartEvent(155)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementStartEvent(174)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=56
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementInfo{statementId=174, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=56
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementEndEvent(174)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] ConnectionStartEvent(155)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] ConnectionStartEvent(156)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementStartEvent(175)
2023-05-26 11:05:33,571 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementInfo{statementId=175, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementEndEvent(175)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] ConnectionStartEvent(156)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] ConnectionEndEvent(156)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=56
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementStartEvent(176)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=56
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=57
2023-05-26 11:05:33,571 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] ConnectionStartEvent(157)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementStartEvent(177)
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=57
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=57
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementInfo{statementId=177, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:33,571 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:33,571 DEBUG [mondrian.server.monitor] StatementEndEvent(177)
2023-05-26 11:05:33,572 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] ConnectionStartEvent(157)
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] ConnectionStartEvent(158)
2023-05-26 11:05:33,572 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] StatementStartEvent(178)
2023-05-26 11:05:33,572 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] StatementInfo{statementId=178, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] StatementEndEvent(178)
2023-05-26 11:05:33,572 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:33,572 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] ConnectionStartEvent(158)
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:33,572 DEBUG [mondrian.server.monitor] ConnectionEndEvent(158)
2023-05-26 11:05:33,573 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=57
2023-05-26 11:05:33,573 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=58
2023-05-26 11:05:33,573 DEBUG [mondrian.server.monitor] ConnectionStartEvent(159)
2023-05-26 11:05:33,573 DEBUG [mondrian.server.monitor] StatementStartEvent(179)
2023-05-26 11:05:33,573 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:33,573 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=58
2023-05-26 11:05:33,573 DEBUG [mondrian.server.monitor] StatementInfo{statementId=179, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:33,573 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=58
2023-05-26 11:05:33,573 DEBUG [mondrian.server.monitor] StatementEndEvent(179)
2023-05-26 11:05:33,573 DEBUG [mondrian.server.monitor] ConnectionStartEvent(159)
2023-05-26 11:05:33,573 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:33,573 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:33,573 DEBUG [mondrian.server.monitor] ConnectionStartEvent(160)
2023-05-26 11:05:33,573 DEBUG [mondrian.server.monitor] StatementStartEvent(180)
2023-05-26 11:05:33,573 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:33,574 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:33,574 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:33,574 DEBUG [mondrian.server.monitor] StatementInfo{statementId=180, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:33,574 DEBUG [mondrian.server.monitor] StatementEndEvent(180)
2023-05-26 11:05:33,574 DEBUG [mondrian.server.monitor] ConnectionStartEvent(160)
2023-05-26 11:05:33,574 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:33,574 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:33,574 DEBUG [mondrian.server.monitor] ConnectionEndEvent(160)
2023-05-26 11:05:33,574 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS] AS
    {[Time.TimeHierarchy].[Year].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY [~ROWS] ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:05:33,574 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:05:33,574 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:33,574 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:33,575 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:33,575 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:05:33,576 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:33,576 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:05:33,576 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:33,576 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:33,576 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:33,576 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:33,576 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:33,578 DEBUG [mondrian.mdx] 4357: with set [~ROWS] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY [~ROWS] ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:33,578 DEBUG [mondrian.server.monitor] ExecutionStartEvent(4357)
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:33,578 DEBUG [mondrian.olap.ResultBase] Named set ~ROWS: starting evaluation
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:33,578 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:33,578 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@6a2ed3d3: Named set ~ROWS evaluated to:
[Time.TimeHierarchy].[2013]
[Time.TimeHierarchy].[2014]
[Time.TimeHierarchy].[2015]
[Time.TimeHierarchy].[2016]
[Time.TimeHierarchy].[2017]
[Time.TimeHierarchy].[2018]
[Time.TimeHierarchy].[2019]
[Time.TimeHierarchy].[2020]
[Time.TimeHierarchy].[2021]
[Time.TimeHierarchy].[2022]

2023-05-26 11:05:33,579 DEBUG [mondrian.profile] NamedSet (~ROWS):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=20, elementSquaredCount=200)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Time.TimeHierarchy].[Year]>, resultStyle=VALUE_NOT_NULL, value=[Time.TimeHierarchy].[Year], callCount=2, callMillis=0)

Query Timing (Cumulative):

2023-05-26 11:05:33,579 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):

2023-05-26 11:05:33,579 DEBUG [mondrian.profile] Axis (ROWS):
~ROWS(name=~ROWS, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE, callCount=2, callMillis=1, elementCount=20, elementSquaredCount=200)

Query Timing (Cumulative):

2023-05-26 11:05:33,579 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:33,579 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:33,579 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:33,579 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:33,581 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):

2023-05-26 11:05:33,581 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 587884kb 75.14%
2023-05-26 11:05:33,582 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:33,582 DEBUG [mondrian.mdx] 4357: exec: 4 ms
2023-05-26 11:05:33,582 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=4357, phaseCount=1, cellCacheRequestCount=70, cellCacheHitCount=70, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:05:33,582 DEBUG [mondrian.server.monitor] ExecutionEndEvent(4357)
2023-05-26 11:05:33,582 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=58
2023-05-26 11:05:33,582 DEBUG [mondrian.server.monitor] StatementInfo{statementId=176, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=70, cellCacheHitCount=70, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:33,582 DEBUG [mondrian.server.monitor] StatementEndEvent(176)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=58
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=59
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] ConnectionStartEvent(161)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] StatementStartEvent(181)
2023-05-26 11:05:39,797 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=59
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=59
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] StatementInfo{statementId=181, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] StatementEndEvent(181)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] ConnectionStartEvent(161)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] ConnectionStartEvent(162)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] StatementStartEvent(182)
2023-05-26 11:05:39,797 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] StatementInfo{statementId=182, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] StatementEndEvent(182)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] ConnectionStartEvent(162)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:39,797 DEBUG [mondrian.server.monitor] ConnectionEndEvent(162)
2023-05-26 11:05:39,797 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=59
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] StatementStartEvent(183)
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=59
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=60
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] ConnectionStartEvent(163)
2023-05-26 11:05:39,798 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] StatementStartEvent(184)
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=60
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=60
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] StatementInfo{statementId=184, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] StatementEndEvent(184)
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] ConnectionStartEvent(163)
2023-05-26 11:05:39,798 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] ConnectionStartEvent(164)
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] StatementStartEvent(185)
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:39,798 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:39,798 DEBUG [mondrian.server.monitor] StatementInfo{statementId=185, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] StatementEndEvent(185)
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] ConnectionStartEvent(164)
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] ConnectionEndEvent(164)
2023-05-26 11:05:39,799 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=60
2023-05-26 11:05:39,799 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=61
2023-05-26 11:05:39,799 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] ConnectionStartEvent(165)
2023-05-26 11:05:39,799 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=61
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] StatementStartEvent(186)
2023-05-26 11:05:39,799 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=61
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] StatementInfo{statementId=186, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] StatementEndEvent(186)
2023-05-26 11:05:39,799 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:39,799 DEBUG [mondrian.server.monitor] ConnectionStartEvent(165)
2023-05-26 11:05:39,800 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:39,800 DEBUG [mondrian.server.monitor] ConnectionStartEvent(166)
2023-05-26 11:05:39,800 DEBUG [mondrian.server.monitor] StatementStartEvent(187)
2023-05-26 11:05:39,800 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:39,800 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:39,800 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:39,800 DEBUG [mondrian.server.monitor] StatementInfo{statementId=187, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:39,800 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:39,800 DEBUG [mondrian.server.monitor] StatementEndEvent(187)
2023-05-26 11:05:39,800 DEBUG [mondrian.server.monitor] ConnectionStartEvent(166)
2023-05-26 11:05:39,800 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:39,800 DEBUG [mondrian.server.monitor] ConnectionEndEvent(166)
2023-05-26 11:05:39,800 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], [~ROWS_Product_Product.ProductHierarchy]) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:05:39,801 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:05:39,801 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:05:39,801 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:39,801 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:05:39,801 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:39,801 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:39,802 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:05:39,802 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:05:39,803 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:39,803 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:05:39,803 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:39,803 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:05:39,803 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:39,803 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:05:39,803 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:39,803 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:39,804 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], [~ROWS_Product_Product.ProductHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:39,804 DEBUG [mondrian.mdx] 4472: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], [~ROWS_Product_Product.ProductHierarchy]) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:39,804 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:39,804 DEBUG [mondrian.server.monitor] ExecutionStartEvent(4472)
2023-05-26 11:05:39,804 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:39,804 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:39,804 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:39,804 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:39,804 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:05:40,200 DEBUG [mondrian.sql] 36: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST]
2023-05-26 11:05:40,201 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(36)
2023-05-26 11:05:40,292 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(36)
2023-05-26 11:05:40,292 DEBUG [mondrian.sql] 36: , exec 91 ms
2023-05-26 11:05:40,292 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST], exec 91 ms
2023-05-26 11:05:40,365 DEBUG [mondrian.sql] 36: , exec+fetch 164 ms, 20 rows
2023-05-26 11:05:40,365 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST], exec+fetch 164 ms, 20 rows, ex=37, close=37, open=[]
2023-05-26 11:05:40,365 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=36, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST}
2023-05-26 11:05:40,365 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(36)
2023-05-26 11:05:40,366 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]] invoked 1 times for total of 164ms.  (Avg. 164ms/invocation)

2023-05-26 11:05:40,366 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:05:40,366 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>>>, resultStyle=LIST, callCount=2, callMillis=561, elementCount=40, elementSquaredCount=800)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]] invoked 1 times for total of 164ms.  (Avg. 164ms/invocation)

2023-05-26 11:05:40,366 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:40,366 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:40,366 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:40,366 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:40,367 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division]] invoked 1 times for total of 164ms.  (Avg. 164ms/invocation)

2023-05-26 11:05:40,367 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 584628kb 74.72%
2023-05-26 11:05:40,367 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:40,367 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=4472, phaseCount=1, cellCacheRequestCount=140, cellCacheHitCount=140, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:05:40,367 DEBUG [mondrian.mdx] 4472: exec: 563 ms
2023-05-26 11:05:40,368 DEBUG [mondrian.server.monitor] ExecutionEndEvent(4472)
2023-05-26 11:05:40,368 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=61
2023-05-26 11:05:40,368 DEBUG [mondrian.server.monitor] StatementInfo{statementId=183, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=140, cellCacheHitCount=140, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=20, sqlStatementExecuteNanos=91562400, cellRequestCount=0}
2023-05-26 11:05:40,368 DEBUG [mondrian.server.monitor] StatementEndEvent(183)
2023-05-26 11:05:44,308 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=61
2023-05-26 11:05:44,308 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=62
2023-05-26 11:05:44,308 DEBUG [mondrian.server.monitor] ConnectionStartEvent(167)
2023-05-26 11:05:44,308 DEBUG [mondrian.server.monitor] StatementStartEvent(188)
2023-05-26 11:05:44,308 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=62
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] StatementInfo{statementId=188, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] StatementEndEvent(188)
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=62
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] ConnectionStartEvent(167)
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] ConnectionStartEvent(168)
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] StatementStartEvent(189)
2023-05-26 11:05:44,309 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] StatementInfo{statementId=189, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] StatementEndEvent(189)
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] ConnectionStartEvent(168)
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:44,309 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=62
2023-05-26 11:05:44,309 DEBUG [mondrian.server.monitor] ConnectionEndEvent(168)
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] StatementStartEvent(190)
2023-05-26 11:05:44,310 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=62
2023-05-26 11:05:44,310 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=63
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] ConnectionStartEvent(169)
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] StatementStartEvent(191)
2023-05-26 11:05:44,310 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:44,310 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=63
2023-05-26 11:05:44,310 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=63
2023-05-26 11:05:44,310 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] StatementInfo{statementId=191, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] StatementEndEvent(191)
2023-05-26 11:05:44,310 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] ConnectionStartEvent(169)
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] ConnectionStartEvent(170)
2023-05-26 11:05:44,310 DEBUG [mondrian.server.monitor] StatementStartEvent(192)
2023-05-26 11:05:44,310 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:44,310 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:44,311 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:44,311 DEBUG [mondrian.server.monitor] StatementInfo{statementId=192, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:44,311 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:44,311 DEBUG [mondrian.server.monitor] StatementEndEvent(192)
2023-05-26 11:05:44,311 DEBUG [mondrian.server.monitor] ConnectionStartEvent(170)
2023-05-26 11:05:44,311 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:44,311 DEBUG [mondrian.server.monitor] ConnectionEndEvent(170)
2023-05-26 11:05:44,312 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=63
2023-05-26 11:05:44,312 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=64
2023-05-26 11:05:44,312 DEBUG [mondrian.server.monitor] ConnectionStartEvent(171)
2023-05-26 11:05:44,312 DEBUG [mondrian.server.monitor] StatementStartEvent(193)
2023-05-26 11:05:44,312 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:44,312 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=64
2023-05-26 11:05:44,312 DEBUG [mondrian.server.monitor] StatementInfo{statementId=193, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:44,312 DEBUG [mondrian.server.monitor] StatementEndEvent(193)
2023-05-26 11:05:44,312 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=64
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] ConnectionStartEvent(171)
2023-05-26 11:05:44,313 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:44,313 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] ConnectionStartEvent(172)
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] StatementStartEvent(194)
2023-05-26 11:05:44,313 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:44,313 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:44,313 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] StatementInfo{statementId=194, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:44,313 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] StatementEndEvent(194)
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] ConnectionStartEvent(172)
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:44,313 DEBUG [mondrian.server.monitor] ConnectionEndEvent(172)
2023-05-26 11:05:44,313 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:05:44,314 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:05:44,314 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:05:44,314 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:44,314 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:05:44,314 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:05:44,314 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:44,314 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:05:44,314 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:44,314 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:44,315 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:05:44,315 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:05:44,316 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:44,316 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:44,317 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:44,317 DEBUG [mondrian.mdx] 4612: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:44,317 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:44,317 DEBUG [mondrian.server.monitor] ExecutionStartEvent(4612)
2023-05-26 11:05:44,317 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:44,317 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:44,317 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:44,317 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:44,317 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:05:44,318 DEBUG [mondrian.sql] 37: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:05:44,318 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(37)
2023-05-26 11:05:44,409 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(37)
2023-05-26 11:05:44,409 DEBUG [mondrian.sql] 37: , exec 90 ms
2023-05-26 11:05:44,409 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 90 ms
2023-05-26 11:05:44,556 DEBUG [mondrian.sql] 37: , exec+fetch 238 ms, 40 rows
2023-05-26 11:05:44,556 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 238 ms, 40 rows, ex=38, close=38, open=[]
2023-05-26 11:05:44,556 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=37, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:05:44,556 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(37)
2023-05-26 11:05:44,557 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 238ms.  (Avg. 238ms/invocation)

2023-05-26 11:05:44,557 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:05:44,558 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=239, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 238ms.  (Avg. 238ms/invocation)

2023-05-26 11:05:44,559 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:44,559 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:44,559 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:44,559 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:44,562 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 238ms.  (Avg. 238ms/invocation)

2023-05-26 11:05:44,562 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 581724kb 74.35%
2023-05-26 11:05:44,562 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:44,562 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=4612, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:05:44,562 DEBUG [mondrian.mdx] 4612: exec: 245 ms
2023-05-26 11:05:44,562 DEBUG [mondrian.server.monitor] ExecutionEndEvent(4612)
2023-05-26 11:05:44,563 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=64
2023-05-26 11:05:44,563 DEBUG [mondrian.server.monitor] StatementInfo{statementId=190, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=90655200, cellRequestCount=0}
2023-05-26 11:05:44,563 DEBUG [mondrian.server.monitor] StatementEndEvent(190)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=64
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=65
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] ConnectionStartEvent(173)
2023-05-26 11:05:58,498 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] StatementStartEvent(195)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=65
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=65
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] StatementInfo{statementId=195, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] StatementEndEvent(195)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] ConnectionStartEvent(173)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] ConnectionStartEvent(174)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] StatementStartEvent(196)
2023-05-26 11:05:58,498 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] StatementInfo{statementId=196, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,498 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=65
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] StatementEndEvent(196)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] ConnectionStartEvent(174)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] ConnectionEndEvent(174)
2023-05-26 11:05:58,498 DEBUG [mondrian.server.monitor] StatementStartEvent(197)
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=65
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=66
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] ConnectionStartEvent(175)
2023-05-26 11:05:58,499 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] StatementStartEvent(198)
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=66
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=66
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] StatementInfo{statementId=198, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] StatementEndEvent(198)
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] ConnectionStartEvent(175)
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] ConnectionStartEvent(176)
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] StatementStartEvent(199)
2023-05-26 11:05:58,499 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,499 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] StatementInfo{statementId=199, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] StatementEndEvent(199)
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] ConnectionStartEvent(176)
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:58,499 DEBUG [mondrian.server.monitor] ConnectionEndEvent(176)
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=66
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=67
2023-05-26 11:05:58,500 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] ConnectionStartEvent(177)
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] StatementStartEvent(200)
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=67
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=67
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] StatementInfo{statementId=200, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] StatementEndEvent(200)
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] ConnectionStartEvent(177)
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] ConnectionStartEvent(178)
2023-05-26 11:05:58,500 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] StatementStartEvent(201)
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,500 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] StatementInfo{statementId=201, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] StatementEndEvent(201)
2023-05-26 11:05:58,500 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] ConnectionStartEvent(178)
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:58,500 DEBUG [mondrian.server.monitor] ConnectionEndEvent(178)
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:58,501 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:05:58,501 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:05:58,502 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:58,502 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:58,503 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:58,503 DEBUG [mondrian.mdx] 4792: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:05:58,503 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:58,504 DEBUG [mondrian.server.monitor] ExecutionStartEvent(4792)
2023-05-26 11:05:58,504 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:58,504 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:58,504 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:58,504 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:58,504 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:05:58,504 DEBUG [mondrian.sql] 38: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:05:58,504 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(38)
2023-05-26 11:05:58,598 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(38)
2023-05-26 11:05:58,598 DEBUG [mondrian.sql] 38: , exec 94 ms
2023-05-26 11:05:58,598 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 94 ms
2023-05-26 11:05:58,743 DEBUG [mondrian.sql] 38: , exec+fetch 239 ms, 40 rows
2023-05-26 11:05:58,743 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 239 ms, 40 rows, ex=39, close=39, open=[]
2023-05-26 11:05:58,743 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=38, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:05:58,744 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(38)
2023-05-26 11:05:58,744 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 239ms.  (Avg. 239ms/invocation)

2023-05-26 11:05:58,744 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:05:58,744 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=240, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 239ms.  (Avg. 239ms/invocation)

2023-05-26 11:05:58,745 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:05:58,745 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:05:58,745 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:05:58,745 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:05:58,746 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 239ms.  (Avg. 239ms/invocation)

2023-05-26 11:05:58,746 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 578351kb 73.92%
2023-05-26 11:05:58,746 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:05:58,746 DEBUG [mondrian.mdx] 4792: exec: 243 ms
2023-05-26 11:05:58,746 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=4792, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:05:58,746 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=67
2023-05-26 11:05:58,746 DEBUG [mondrian.server.monitor] ExecutionEndEvent(4792)
2023-05-26 11:05:58,746 DEBUG [mondrian.server.monitor] StatementInfo{statementId=197, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=94110700, cellRequestCount=0}
2023-05-26 11:05:58,746 DEBUG [mondrian.server.monitor] StatementEndEvent(197)
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=67
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=68
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] ConnectionStartEvent(179)
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] StatementStartEvent(202)
2023-05-26 11:05:58,749 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=68
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] StatementInfo{statementId=202, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] StatementEndEvent(202)
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=68
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] ConnectionStartEvent(179)
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] ConnectionStartEvent(180)
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] StatementStartEvent(203)
2023-05-26 11:05:58,749 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] StatementInfo{statementId=203, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] StatementEndEvent(203)
2023-05-26 11:05:58,749 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] ConnectionStartEvent(180)
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:05:58,749 DEBUG [mondrian.server.monitor] ConnectionEndEvent(180)
2023-05-26 11:12:06,352 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=68
2023-05-26 11:12:06,352 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=69
2023-05-26 11:12:06,352 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,352 DEBUG [mondrian.server.monitor] ConnectionStartEvent(181)
2023-05-26 11:12:06,352 DEBUG [mondrian.server.monitor] StatementStartEvent(204)
2023-05-26 11:12:06,352 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=69
2023-05-26 11:12:06,352 DEBUG [mondrian.server.monitor] StatementInfo{statementId=204, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,352 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=69
2023-05-26 11:12:06,352 DEBUG [mondrian.server.monitor] StatementEndEvent(204)
2023-05-26 11:12:06,352 DEBUG [mondrian.server.monitor] ConnectionStartEvent(181)
2023-05-26 11:12:06,352 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:06,352 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:06,352 DEBUG [mondrian.server.monitor] ConnectionStartEvent(182)
2023-05-26 11:12:06,352 DEBUG [mondrian.server.monitor] StatementStartEvent(205)
2023-05-26 11:12:06,352 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementInfo{statementId=205, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementEndEvent(205)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(182)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=69
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionEndEvent(182)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementStartEvent(206)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=69
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=70
2023-05-26 11:12:06,353 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(183)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementStartEvent(207)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=70
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=70
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementInfo{statementId=207, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementEndEvent(207)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(183)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:06,353 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(184)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementStartEvent(208)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,353 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementInfo{statementId=208, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] StatementEndEvent(208)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionStartEvent(184)
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:06,353 DEBUG [mondrian.server.monitor] ConnectionEndEvent(184)
2023-05-26 11:12:06,354 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=70
2023-05-26 11:12:06,354 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=71
2023-05-26 11:12:06,354 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] ConnectionStartEvent(185)
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] StatementStartEvent(209)
2023-05-26 11:12:06,355 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=71
2023-05-26 11:12:06,355 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=71
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] StatementInfo{statementId=209, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,355 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:06,355 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] StatementEndEvent(209)
2023-05-26 11:12:06,355 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] ConnectionStartEvent(185)
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] ConnectionStartEvent(186)
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] StatementStartEvent(210)
2023-05-26 11:12:06,355 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:06,355 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,355 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] StatementInfo{statementId=210, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] StatementEndEvent(210)
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] ConnectionStartEvent(186)
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:06,355 DEBUG [mondrian.server.monitor] ConnectionEndEvent(186)
2023-05-26 11:12:06,355 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~FILTER] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy]) ON ROWS
FROM [HypercubeDirtBikes]
WHERE [~FILTER]
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:12:06,356 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:12:06,356 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:12:06,356 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:12:06,356 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:12:06,356 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:12:06,356 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:06,357 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:12:06,357 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:06,358 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:06,358 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:06,358 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:06,358 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapConnection] with set [~FILTER] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy]) ON ROWS
from [HypercubeDirtBikes]
where [~FILTER]

2023-05-26 11:12:06,359 DEBUG [mondrian.mdx] 5290: with set [~FILTER] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy]) ON ROWS
from [HypercubeDirtBikes]
where [~FILTER]

2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:12:06,359 DEBUG [mondrian.server.monitor] ExecutionStartEvent(5290)
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:06,359 DEBUG [mondrian.olap.ResultBase] Named set ~FILTER: starting evaluation
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:06,359 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:06,359 DEBUG [mondrian.olap.ResultBase] mondrian.rolap.RolapNamedSetEvaluator@1b5860b0: Named set ~FILTER evaluated to:
[Time.TimeHierarchy].[2013]
[Time.TimeHierarchy].[2014]
[Time.TimeHierarchy].[2015]
[Time.TimeHierarchy].[2016]
[Time.TimeHierarchy].[2017]
[Time.TimeHierarchy].[2018]
[Time.TimeHierarchy].[2019]
[Time.TimeHierarchy].[2020]
[Time.TimeHierarchy].[2021]
[Time.TimeHierarchy].[2022]

2023-05-26 11:12:06,359 DEBUG [mondrian.profile] NamedSet (~FILTER):
Members(name=Members, class=class mondrian.olap.fun.LevelMembersFunDef$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=20, elementSquaredCount=200)
    Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=LevelType<level=[Time.TimeHierarchy].[Year]>, resultStyle=VALUE_NOT_NULL, value=[Time.TimeHierarchy].[Year], callCount=2, callMillis=0)

Query Timing (Cumulative):

2023-05-26 11:12:06,747 DEBUG [mondrian.sql] 39: SqlMemberSource.getMemberChildren: executing sql [
select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST]
2023-05-26 11:12:06,747 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(39)
2023-05-26 11:12:06,827 DEBUG [mondrian.sql] 39: , exec 79 ms
2023-05-26 11:12:06,827 DEBUG [mondrian.rolap.RolapUtil] SqlMemberSource.getMemberChildren: executing sql [select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec 79 ms
2023-05-26 11:12:06,827 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(39)
2023-05-26 11:12:06,865 DEBUG [mondrian.sql] 39: , exec+fetch 118 ms, 10 rows
2023-05-26 11:12:06,865 DEBUG [mondrian.rolap.RolapUtil] SqlMemberSource.getMemberChildren: done executing sql [select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec+fetch 118 ms, 10 rows, ex=40, close=40, open=[]
2023-05-26 11:12:06,865 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=39, sql=select
    extract (year from FT_TIME_ID) as "c0"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE"
group by
    extract (year from FT_TIME_ID)
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST}
2023-05-26 11:12:06,865 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(39)
2023-05-26 11:12:06,871 DEBUG [mondrian.profile] Axis (FILTER):
~FILTER(name=~FILTER, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE, callCount=2, callMillis=0, elementCount=20, elementSquaredCount=200)

Query Timing (Cumulative):
SqlStatement-SqlMemberSource.getMemberChildren invoked 1 times for total of 118ms.  (Avg. 118ms/invocation)

2023-05-26 11:12:06,871 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:12:06,873 DEBUG [mondrian.sql] 40: SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
and
    extract (year from FT_TIME_ID) in ('2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022')
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:12:06,874 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(40)
2023-05-26 11:12:06,989 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(40)
2023-05-26 11:12:06,989 DEBUG [mondrian.sql] 40: , exec 115 ms
2023-05-26 11:12:06,989 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
and
    extract (year from FT_TIME_ID) in ('2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022')
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 115 ms
2023-05-26 11:12:06,989 DEBUG [mondrian.sql] 40: , exec+fetch 115 ms, 4 rows
2023-05-26 11:12:06,989 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
and
    extract (year from FT_TIME_ID) in ('2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022')
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 115 ms, 4 rows, ex=41, close=41, open=[]
2023-05-26 11:12:06,989 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=40, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
and
    extract (year from FT_TIME_ID) in ('2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022')
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:12:06,989 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(40)
2023-05-26 11:12:06,989 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlMemberSource.getMemberChildren invoked 1 times for total of 118ms.  (Avg. 118ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 115ms.  (Avg. 115ms/invocation)

2023-05-26 11:12:06,990 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:12:06,990 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=119, elementCount=8, elementSquaredCount=32)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlMemberSource.getMemberChildren invoked 1 times for total of 118ms.  (Avg. 118ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 115ms.  (Avg. 115ms/invocation)

2023-05-26 11:12:06,991 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:06,991 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:06,991 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:06,991 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:06,993 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
EvalForSlicer invoked 28 times for total of 3ms.  (Avg. 0ms/invocation)
SqlStatement-SqlMemberSource.getMemberChildren invoked 1 times for total of 118ms.  (Avg. 118ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 115ms.  (Avg. 115ms/invocation)

2023-05-26 11:12:06,993 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 573171kb 73.26%
2023-05-26 11:12:06,993 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:12:06,993 DEBUG [mondrian.mdx] 5290: exec: 634 ms
2023-05-26 11:12:06,993 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=5290, phaseCount=1, cellCacheRequestCount=28, cellCacheHitCount=28, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=28}
2023-05-26 11:12:06,993 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=71
2023-05-26 11:12:06,993 DEBUG [mondrian.server.monitor] ExecutionEndEvent(5290)
2023-05-26 11:12:06,993 DEBUG [mondrian.server.monitor] StatementInfo{statementId=206, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=28, cellCacheHitCount=28, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=2, sqlStatementExecuteCount=2, sqlStatementEndCount=2, sqlStatementRowFetchCount=14, sqlStatementExecuteNanos=194900800, cellRequestCount=0}
2023-05-26 11:12:06,993 DEBUG [mondrian.server.monitor] StatementEndEvent(206)
2023-05-26 11:12:06,997 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=71
2023-05-26 11:12:06,998 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=72
2023-05-26 11:12:06,998 DEBUG [mondrian.server.monitor] ConnectionStartEvent(187)
2023-05-26 11:12:06,998 DEBUG [mondrian.server.monitor] StatementStartEvent(211)
2023-05-26 11:12:06,998 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,998 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=72
2023-05-26 11:12:06,998 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=72
2023-05-26 11:12:06,998 DEBUG [mondrian.server.monitor] StatementInfo{statementId=211, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,998 DEBUG [mondrian.server.monitor] StatementEndEvent(211)
2023-05-26 11:12:06,998 DEBUG [mondrian.server.monitor] ConnectionStartEvent(187)
2023-05-26 11:12:06,998 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:06,998 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:06,998 DEBUG [mondrian.server.monitor] ConnectionStartEvent(188)
2023-05-26 11:12:06,998 DEBUG [mondrian.server.monitor] StatementStartEvent(212)
2023-05-26 11:12:06,998 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:06,999 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:06,999 DEBUG [mondrian.server.monitor] StatementInfo{statementId=212, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:06,999 DEBUG [mondrian.server.monitor] StatementEndEvent(212)
2023-05-26 11:12:06,999 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,999 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:06,999 DEBUG [mondrian.server.monitor] ConnectionStartEvent(188)
2023-05-26 11:12:06,999 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:06,999 DEBUG [mondrian.server.monitor] ConnectionEndEvent(188)
2023-05-26 11:12:11,205 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=72
2023-05-26 11:12:11,205 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=73
2023-05-26 11:12:11,205 DEBUG [mondrian.server.monitor] ConnectionStartEvent(189)
2023-05-26 11:12:11,205 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,205 DEBUG [mondrian.server.monitor] StatementStartEvent(213)
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=73
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] StatementInfo{statementId=213, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=73
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] StatementEndEvent(213)
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] ConnectionStartEvent(189)
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] ConnectionStartEvent(190)
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] StatementStartEvent(214)
2023-05-26 11:12:11,206 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] StatementInfo{statementId=214, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] StatementEndEvent(214)
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] ConnectionStartEvent(190)
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] ConnectionEndEvent(190)
2023-05-26 11:12:11,206 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=73
2023-05-26 11:12:11,206 DEBUG [mondrian.server.monitor] StatementStartEvent(215)
2023-05-26 11:12:11,207 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=73
2023-05-26 11:12:11,207 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=74
2023-05-26 11:12:11,207 DEBUG [mondrian.server.monitor] ConnectionStartEvent(191)
2023-05-26 11:12:11,207 DEBUG [mondrian.server.monitor] StatementStartEvent(216)
2023-05-26 11:12:11,207 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,207 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=74
2023-05-26 11:12:11,207 DEBUG [mondrian.server.monitor] StatementInfo{statementId=216, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,207 DEBUG [mondrian.server.monitor] StatementEndEvent(216)
2023-05-26 11:12:11,207 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=74
2023-05-26 11:12:11,207 DEBUG [mondrian.server.monitor] ConnectionStartEvent(191)
2023-05-26 11:12:11,207 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:11,207 DEBUG [mondrian.server.monitor] ConnectionStartEvent(192)
2023-05-26 11:12:11,207 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:11,207 DEBUG [mondrian.server.monitor] StatementStartEvent(217)
2023-05-26 11:12:11,207 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,208 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:11,208 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,208 DEBUG [mondrian.server.monitor] StatementInfo{statementId=217, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,208 DEBUG [mondrian.server.monitor] StatementEndEvent(217)
2023-05-26 11:12:11,208 DEBUG [mondrian.server.monitor] ConnectionStartEvent(192)
2023-05-26 11:12:11,208 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,208 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:11,208 DEBUG [mondrian.server.monitor] ConnectionEndEvent(192)
2023-05-26 11:12:11,209 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=74
2023-05-26 11:12:11,209 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=75
2023-05-26 11:12:11,209 DEBUG [mondrian.server.monitor] ConnectionStartEvent(193)
2023-05-26 11:12:11,209 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,209 DEBUG [mondrian.server.monitor] StatementStartEvent(218)
2023-05-26 11:12:11,209 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=75
2023-05-26 11:12:11,209 DEBUG [mondrian.server.monitor] StatementInfo{statementId=218, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,209 DEBUG [mondrian.server.monitor] StatementEndEvent(218)
2023-05-26 11:12:11,209 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=75
2023-05-26 11:12:11,209 DEBUG [mondrian.server.monitor] ConnectionStartEvent(193)
2023-05-26 11:12:11,209 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:11,209 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:11,209 DEBUG [mondrian.server.monitor] ConnectionStartEvent(194)
2023-05-26 11:12:11,209 DEBUG [mondrian.server.monitor] StatementStartEvent(219)
2023-05-26 11:12:11,209 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,210 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:11,210 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,210 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,210 DEBUG [mondrian.server.monitor] StatementInfo{statementId=219, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,210 DEBUG [mondrian.server.monitor] StatementEndEvent(219)
2023-05-26 11:12:11,210 DEBUG [mondrian.server.monitor] ConnectionStartEvent(194)
2023-05-26 11:12:11,210 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:11,210 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], NonEmptyCrossJoin([~ROWS_Customer_Customer.CustomerHierarchy], [~ROWS_Time_Time.TimeHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:12:11,210 DEBUG [mondrian.server.monitor] ConnectionEndEvent(194)
2023-05-26 11:12:11,211 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:12:11,211 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:12:11,211 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:11,211 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:12:11,211 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:12:11,211 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:11,211 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:12:11,211 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:12:11,211 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:11,211 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:12:11,211 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:12:11,212 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:11,212 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:11,213 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], NonEmptyCrossJoin([~ROWS_Customer_Customer.CustomerHierarchy], [~ROWS_Time_Time.TimeHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:12:11,213 DEBUG [mondrian.mdx] 5494: with set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
  set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], NonEmptyCrossJoin([~ROWS_Customer_Customer.CustomerHierarchy], [~ROWS_Time_Time.TimeHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:12:11,213 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:12:11,213 DEBUG [mondrian.server.monitor] ExecutionStartEvent(5494)
2023-05-26 11:12:11,213 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:11,213 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:11,213 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:11,213 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:11,213 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:12:11,213 DEBUG [mondrian.sql] 41: SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country], [Time.TimeHierarchy].[Year]]: executing sql [
select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2",
    extract (year from FT_TIME_ID) as "c3"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST]
2023-05-26 11:12:11,214 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(41)
2023-05-26 11:12:11,311 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(41)
2023-05-26 11:12:11,311 DEBUG [mondrian.sql] 41: , exec 98 ms
2023-05-26 11:12:11,311 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country], [Time.TimeHierarchy].[Year]]: executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2",
    extract (year from FT_TIME_ID) as "c3"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec 98 ms
2023-05-26 11:12:11,459 DEBUG [mondrian.sql] 41: , exec+fetch 246 ms, 40 rows
2023-05-26 11:12:11,459 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country], [Time.TimeHierarchy].[Year]]: done executing sql [select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2",
    extract (year from FT_TIME_ID) as "c3"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST], exec+fetch 246 ms, 40 rows, ex=42, close=42, open=[]
2023-05-26 11:12:11,459 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=41, sql=select
    "WSA994_PRODUCT"."DIVISION_ID" as "c0",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c1",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c2",
    extract (year from FT_TIME_ID) as "c3"
from
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID",
    extract (year from FT_TIME_ID)
order by
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST,
    extract (year from FT_TIME_ID) ASC NULLS LAST}
2023-05-26 11:12:11,459 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(41)
2023-05-26 11:12:11,460 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 246ms.  (Avg. 246ms/invocation)

2023-05-26 11:12:11,460 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:12:11,461 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>, MemberType<level=[Time.TimeHierarchy].[Year]>>>, resultStyle=LIST, callCount=2, callMillis=247, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Customer.CustomerHierarchy].[Country]>, MemberType<level=[Time.TimeHierarchy].[Year]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 246ms.  (Avg. 246ms/invocation)

2023-05-26 11:12:11,462 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:11,462 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:11,462 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:11,462 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:11,468 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country], [Time.TimeHierarchy].[Year]] invoked 1 times for total of 246ms.  (Avg. 246ms/invocation)

2023-05-26 11:12:11,468 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 570098kb 72.87%
2023-05-26 11:12:11,468 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:12:11,469 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=5494, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:12:11,469 DEBUG [mondrian.mdx] 5494: exec: 256 ms
2023-05-26 11:12:11,469 DEBUG [mondrian.server.monitor] ExecutionEndEvent(5494)
2023-05-26 11:12:11,469 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=75
2023-05-26 11:12:11,469 DEBUG [mondrian.server.monitor] StatementInfo{statementId=215, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=98089800, cellRequestCount=0}
2023-05-26 11:12:11,470 DEBUG [mondrian.server.monitor] StatementEndEvent(215)
2023-05-26 11:12:11,471 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=75
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=76
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] ConnectionStartEvent(195)
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] StatementStartEvent(220)
2023-05-26 11:12:11,472 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=76
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=76
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] StatementInfo{statementId=220, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] StatementEndEvent(220)
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] ConnectionStartEvent(195)
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:11,472 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] ConnectionStartEvent(196)
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] StatementStartEvent(221)
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,472 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] StatementInfo{statementId=221, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] StatementEndEvent(221)
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] ConnectionStartEvent(196)
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:11,472 DEBUG [mondrian.server.monitor] ConnectionEndEvent(196)
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=76
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=77
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] ConnectionStartEvent(197)
2023-05-26 11:12:19,233 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] StatementStartEvent(222)
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=77
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=77
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] StatementInfo{statementId=222, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] StatementEndEvent(222)
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] ConnectionStartEvent(197)
2023-05-26 11:12:19,233 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] ConnectionStartEvent(198)
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] StatementStartEvent(223)
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] StatementInfo{statementId=223, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,233 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=77
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] StatementEndEvent(223)
2023-05-26 11:12:19,233 DEBUG [mondrian.server.monitor] ConnectionStartEvent(198)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionEndEvent(198)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] StatementStartEvent(224)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=77
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=78
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionStartEvent(199)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] StatementStartEvent(225)
2023-05-26 11:12:19,234 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=78
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] StatementInfo{statementId=225, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=78
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] StatementEndEvent(225)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionStartEvent(199)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionStartEvent(200)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] StatementStartEvent(226)
2023-05-26 11:12:19,234 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] StatementInfo{statementId=226, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,234 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] StatementEndEvent(226)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionStartEvent(200)
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:19,234 DEBUG [mondrian.server.monitor] ConnectionEndEvent(200)
2023-05-26 11:12:19,235 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=78
2023-05-26 11:12:19,235 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=1, connections=79
2023-05-26 11:12:19,235 DEBUG [mondrian.server.monitor] ConnectionStartEvent(201)
2023-05-26 11:12:19,235 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,235 DEBUG [mondrian.server.monitor] StatementStartEvent(227)
2023-05-26 11:12:19,235 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=2, connections=79
2023-05-26 11:12:19,235 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=1, connections=79
2023-05-26 11:12:19,235 DEBUG [mondrian.server.monitor] StatementInfo{statementId=227, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,235 DEBUG [mondrian.server.monitor] StatementEndEvent(227)
2023-05-26 11:12:19,235 DEBUG [mondrian.server.monitor] ConnectionStartEvent(201)
2023-05-26 11:12:19,235 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:19,235 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:19,235 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,236 DEBUG [mondrian.server.monitor] ConnectionStartEvent(202)
2023-05-26 11:12:19,236 DEBUG [mondrian.server.monitor] StatementStartEvent(228)
2023-05-26 11:12:19,236 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:19,236 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,236 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,236 DEBUG [mondrian.server.monitor] StatementInfo{statementId=228, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,236 DEBUG [mondrian.server.monitor] StatementEndEvent(228)
2023-05-26 11:12:19,236 DEBUG [mondrian.server.monitor] ConnectionStartEvent(202)
2023-05-26 11:12:19,236 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:19,236 DEBUG [mondrian.server.monitor] ConnectionEndEvent(202)
2023-05-26 11:12:19,236 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_Time_Time.TimeHierarchy] AS
    {[Time.TimeHierarchy].[Year].Members}
SET [~ROWS_Product_Product.ProductHierarchy] AS
    {[Product.ProductHierarchy].[Division].Members}
SET [~ROWS_Customer_Customer.CustomerHierarchy] AS
    {[Customer.CustomerHierarchy].[Country].Members}
SELECT
NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
FROM [HypercubeDirtBikes]
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy]
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Customer.CustomerHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy]
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Product.ProductHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy]
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Time.TimeHierarchy, child.class=mondrian.rolap.RolapCubeHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Time.TimeHierarchy].[Year]
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Time.TimeHierarchy], status=hierUsage == null returning elementname=Time.TimeHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Time.TimeHierarchy, childname=[Year] returning elementname=Year
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Year, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Product.ProductHierarchy].[Division]
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Product.ProductHierarchy], status=hierUsage == null returning elementname=Product.ProductHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Product.ProductHierarchy, childname=[Division] returning elementname=Division
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Division, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Customer.CustomerHierarchy].[Country]
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Customer.CustomerHierarchy], status=hierUsage == null returning elementname=Customer.CustomerHierarchy
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Customer.CustomerHierarchy, childname=[Country] returning elementname=Country
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=Country, child.class=mondrian.rolap.RolapCubeLevel
2023-05-26 11:12:19,237 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueUSD]
2023-05-26 11:12:19,237 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueUSD] returning elementname=RevenueUSD
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[DiscountUSD]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DiscountUSD] returning elementname=DiscountUSD
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DiscountUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[CostOfGoodsSoldUSD]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[CostOfGoodsSoldUSD] returning elementname=CostOfGoodsSoldUSD
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CostOfGoodsSoldUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[SalesQuantity]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SalesQuantity] returning elementname=SalesQuantity
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SalesQuantity, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NoOfSalesOrders]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NoOfSalesOrders] returning elementname=NoOfSalesOrders
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NoOfSalesOrders, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[NetSales]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NetSales] returning elementname=NetSales
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NetSales, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HypercubeDirtBikes, category=unknown, names=[Measures].[RevenueEUR]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HypercubeDirtBikes, childname=[Measures] returning elementname=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[RevenueEUR] returning elementname=RevenueEUR
2023-05-26 11:12:19,238 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=RevenueEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:19,238 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:19,239 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:12:19,239 DEBUG [mondrian.mdx] 5992: with set [~ROWS_Time_Time.TimeHierarchy] as '{[Time.TimeHierarchy].[Year].Members}'
  set [~ROWS_Product_Product.ProductHierarchy] as '{[Product.ProductHierarchy].[Division].Members}'
  set [~ROWS_Customer_Customer.CustomerHierarchy] as '{[Customer.CustomerHierarchy].[Country].Members}'
select NON EMPTY {[Measures].[RevenueUSD], [Measures].[DiscountUSD], [Measures].[CostOfGoodsSoldUSD], [Measures].[SalesQuantity], [Measures].[NoOfSalesOrders], [Measures].[NetSales], [Measures].[RevenueEUR]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_Time_Time.TimeHierarchy], NonEmptyCrossJoin([~ROWS_Product_Product.ProductHierarchy], [~ROWS_Customer_Customer.CustomerHierarchy])) ON ROWS
from [HypercubeDirtBikes]

2023-05-26 11:12:19,239 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:12:19,239 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:19,239 DEBUG [mondrian.server.monitor] ExecutionStartEvent(5992)
2023-05-26 11:12:19,239 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:19,239 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:19,239 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:19,240 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:12:19,240 DEBUG [mondrian.sql] 42: SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [
select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST]
2023-05-26 11:12:19,240 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(42)
2023-05-26 11:12:19,314 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(42)
2023-05-26 11:12:19,314 DEBUG [mondrian.sql] 42: , exec 73 ms
2023-05-26 11:12:19,314 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec 73 ms
2023-05-26 11:12:19,461 DEBUG [mondrian.sql] 42: , exec+fetch 221 ms, 40 rows
2023-05-26 11:12:19,461 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]]: done executing sql [select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST], exec+fetch 221 ms, 40 rows, ex=43, close=43, open=[]
2023-05-26 11:12:19,461 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=42, sql=select
    extract (year from FT_TIME_ID) as "c0",
    "WSA994_PRODUCT"."DIVISION_ID" as "c1",
    "WSA994_PRODUCT"."DIVISION_DESC" as "c2",
    "WSA994_CUSTOMER"."COUNTRY_ID" as "c3"
from
    "DB_2631075"."WSA994_FACTTABLE" "WSA994_FACTTABLE",
    "DB_2631075"."WSA994_PRODUCT" "WSA994_PRODUCT",
    "DB_2631075"."WSA994_CUSTOMER" "WSA994_CUSTOMER"
where
    "WSA994_FACTTABLE"."FT_PRODUCT_ID" = "WSA994_PRODUCT"."PRODUCT_ID"
and
    "WSA994_FACTTABLE"."FT_CUSTOMER_ID" = "WSA994_CUSTOMER"."CUSTOMER_ID"
group by
    extract (year from FT_TIME_ID),
    "WSA994_PRODUCT"."DIVISION_ID",
    "WSA994_PRODUCT"."DIVISION_DESC",
    "WSA994_CUSTOMER"."COUNTRY_ID"
order by
    extract (year from FT_TIME_ID) ASC NULLS LAST,
    "WSA994_PRODUCT"."DIVISION_ID" ASC NULLS LAST,
    "WSA994_CUSTOMER"."COUNTRY_ID" ASC NULLS LAST}
2023-05-26 11:12:19,461 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(42)
2023-05-26 11:12:19,462 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[RevenueUSD]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DiscountUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DiscountUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[CostOfGoodsSoldUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[CostOfGoodsSoldUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SalesQuantity]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SalesQuantity], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NoOfSalesOrders]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NoOfSalesOrders], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NetSales]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NetSales], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[RevenueEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[RevenueEUR], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 221ms.  (Avg. 221ms/invocation)

2023-05-26 11:12:19,462 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2023-05-26 11:12:19,463 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Time.TimeHierarchy].[Year]>, MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=2, callMillis=221, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_Time_Time.TimeHierarchy(name=~ROWS_Time_Time.TimeHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Time.TimeHierarchy].[Year]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[Product.ProductHierarchy].[Division]>, MemberType<level=[Customer.CustomerHierarchy].[Country]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Product_Product.ProductHierarchy(name=~ROWS_Product_Product.ProductHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Product.ProductHierarchy].[Division]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_Customer_Customer.CustomerHierarchy(name=~ROWS_Customer_Customer.CustomerHierarchy, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[Customer.CustomerHierarchy].[Country]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 221ms.  (Avg. 221ms/invocation)

2023-05-26 11:12:19,464 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2023-05-26 11:12:19,464 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Product].[#null]
2023-05-26 11:12:19,464 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Customer].[#null]
2023-05-26 11:12:19,464 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[Time].[#null]
2023-05-26 11:12:19,467 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[Time.TimeHierarchy].[Year], [Product.ProductHierarchy].[Division], [Customer.CustomerHierarchy].[Country]] invoked 1 times for total of 221ms.  (Avg. 221ms/invocation)

2023-05-26 11:12:19,467 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 565994kb 72.34%
2023-05-26 11:12:19,467 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=WSA994, star=WSA994_FACTTABLE
2023-05-26 11:12:19,467 DEBUG [mondrian.mdx] 5992: exec: 228 ms
2023-05-26 11:12:19,467 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=5992, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2023-05-26 11:12:19,467 DEBUG [mondrian.server.monitor] ExecutionEndEvent(5992)
2023-05-26 11:12:19,467 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=79
2023-05-26 11:12:19,467 DEBUG [mondrian.server.monitor] StatementInfo{statementId=224, executeStartCount=1, executeEndCount=1, phaseCount=1, cellCacheRequestCount=280, cellCacheHitCount=280, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=1, sqlStatementExecuteCount=1, sqlStatementEndCount=1, sqlStatementRowFetchCount=40, sqlStatementExecuteNanos=73263000, cellRequestCount=0}
2023-05-26 11:12:19,467 DEBUG [mondrian.server.monitor] StatementEndEvent(224)
2023-05-26 11:12:19,472 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=79
2023-05-26 11:12:19,472 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=2, statements=0, connections=80
2023-05-26 11:12:19,472 DEBUG [mondrian.server.monitor] ConnectionStartEvent(203)
2023-05-26 11:12:19,472 DEBUG [mondrian.server.monitor] StatementStartEvent(229)
2023-05-26 11:12:19,472 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,472 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=2, statements=1, connections=80
2023-05-26 11:12:19,472 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=2, statements=0, connections=80
2023-05-26 11:12:19,472 DEBUG [mondrian.server.monitor] StatementInfo{statementId=229, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,472 DEBUG [mondrian.server.monitor] StatementEndEvent(229)
2023-05-26 11:12:19,473 DEBUG [mondrian.server.monitor] ConnectionStartEvent(203)
2023-05-26 11:12:19,473 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2023-05-26 11:12:19,473 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2023-05-26 11:12:19,473 DEBUG [mondrian.server.monitor] ConnectionStartEvent(204)
2023-05-26 11:12:19,473 DEBUG [mondrian.server.monitor] StatementStartEvent(230)
2023-05-26 11:12:19,473 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/C:/Users/snazari/Desktop/UNI/Semester4/WI2/mondrian/StarSchema.xml" using dynamic processor
2023-05-26 11:12:19,473 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2023-05-26 11:12:19,473 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,473 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2023-05-26 11:12:19,473 DEBUG [mondrian.server.monitor] StatementInfo{statementId=230, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2023-05-26 11:12:19,473 DEBUG [mondrian.server.monitor] StatementEndEvent(230)
2023-05-26 11:12:19,474 DEBUG [mondrian.server.monitor] ConnectionStartEvent(204)
2023-05-26 11:12:19,474 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2023-05-26 11:12:19,474 DEBUG [mondrian.server.monitor] ConnectionEndEvent(204)
